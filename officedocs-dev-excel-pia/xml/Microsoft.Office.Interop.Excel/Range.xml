<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="970c62ca3e06a81e143d3b1337bd0b64ff32de6cab8e45021521933e8d6aaf7b" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54518196" /></Metadata><TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>セル、行、列、1 つ以上のセル範囲を含む選択範囲、または 3-D 範囲を表します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary>内部使用のために予約されています。 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>1 つのセルをアクティブにします。セルは現在の選択範囲内にある必要があります。</summary>
        <returns>To be added.</returns>
        <remarks><para>セルの範囲を選択するには、メソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">省略 <b>可能なオブジェクト</b>です。 コメント テキストを指定します。</param>
        <summary>範囲にコメントを追加します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル内のテキストの配置が水平方向または垂直方向に等しい分布に設定されている場合に、テキストが自動的にインデントされるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>セル内のテキストの配置 <b>が</b> 水平方向または垂直方向に等しい分布に設定されている場合、このプロパティは True を返します。</para>
          <para>テキスト配置を等しい分布に設定するには、プロパティの値が xlVertical の場合にプロパティを <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> <b>xlVAlignDistributed</b>に設定し、Orientation プロパティの値が xlHorizontal の場合は、プロパティを <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> <b>xlHAlignDistributed</b><b></b>に設定できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">省略 <b>可能なオブジェクト</b>です。 行部分の参照を絶対参照として返すには、 <b>True</b> を指定します。 既定値は <b>True</b> です。</param>
        <param name="ColumnAbsolute">省略 <b>可能なオブジェクト</b>です。 列部分の参照を絶対参照として返すには、 <b>True</b> を指定します。 既定値は <b>True</b> です。</param>
        <param name="ReferenceStyle">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</param>
        <param name="External">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、外部参照が返されます。 <b>ローカル</b> 参照を返す場合は False。 既定値は <b>False</b> です。</param>
        <param name="RelativeTo">省略 <b>可能なオブジェクト</b>です。 False <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> の <b>場合</b> <paramref name="ReferenceStyle" /> <b>、xlR1C1</b>の場合は、相対参照の開始点を含める必要があります。 この引数は、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 開始点を定義するオブジェクトです。</param>
        <summary>範囲参照を返します。</summary>
        <value>To be added.</value>
        <remarks><para>参照に複数のセルが含まれている場合は <paramref name="RowAbsolute" /> 、 <paramref name="ColumnAbsolute" /> すべての行と列に適用されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute">省略 <b>可能なオブジェクト</b>です。 行部分の参照を絶対参照として返すには、 <b>True</b> を指定します。 既定値は <b>True</b> です。</param>
        <param name="ColumnAbsolute">省略 <b>可能なオブジェクト</b>です。 列部分の参照を絶対参照として返すには、 <b>True</b> を指定します。 既定値は <b>True</b> です。</param>
        <param name="ReferenceStyle">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> 可能です。</param>
        <param name="External">省略 <b>可能なオブジェクト</b>です。 外部参照を返すには、 <b>True</b> を指定します。 ローカル参照を返すには、 <b>False</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="RelativeTo">省略 <b>可能なオブジェクト</b>です。 両方 <paramref name="RowAbsolute" /> とも <paramref name="ColumnAbsolute" /> False に<b></b>設定され <paramref name="ReferenceStyle" /> <b>、xlR1C1</b>に設定されている場合は、相対参照の開始点を含める必要があります。 この引数は、 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 参照の開始点を定義するオブジェクトです。</param>
        <summary>ユーザーの言語で指定した範囲の範囲参照を返します。</summary>
        <value>To be added.</value>
        <remarks><para>参照に複数のセルが含まれている場合、すべての行とすべての列 <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> にそれぞれ適用されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" /> 。 XlFilterAction クラスの<b>定数は、xlFilterCopy</b> <b>xlFilterInPlace クラスの定数の 1 つを指定できます。</b> <b></b></param>
        <param name="CriteriaRange">省略 <b>可能なオブジェクト</b>です。 検索条件範囲を指定します。 省略すると、検索条件なしで抽出されます。</param>
        <param name="CopyToRange">省略 <b>可能なオブジェクト</b>です。 Action が . の場合、コピーされた行のコピー先の範囲 <paramref name="xlFilterCopy" /> です。 それ以外の場合、この引数は無視されます。</param>
        <param name="Unique">省略 <b>可能なオブジェクト</b>です。 <b>True を</b> 指定すると、一意のレコードのみをフィルター処理できます。 <b>False</b> を指定すると、条件を満たすすべてのレコードをフィルター処理できます。 既定値は <b>False</b> です。</param>
        <summary>条件範囲に基づいてリストからデータをフィルターまたはコピーします。</summary>
        <returns>To be added.</returns>
        <remarks><para>最初の選択範囲が 1 つのセルの場合、そのセルの現在の領域が使用されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>OLAP データ ソースに基づく範囲内の編集されたすべてのセルに書き戻し操作を実行します。</summary>
        <remarks><para>メソッドは、最後の適用変更操作がコミットされた後、範囲内で行われたすべての変更に対して UPDATE CUBE ステートメント <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> を実行します。 このメソッドは、OLAP 以外のデータ ソースに基づくピボットテーブル レポートで実行すると、実行時エラーが発生します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保護されたワークシートで範囲を編集できるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>保護されたワークシート <b>で範囲</b> を編集できる場合、このプロパティは True を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトMicrosoft Excelします。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names">省略 <b>可能なオブジェクト</b>です。 引用する名前の配列です。 この引数を省略すると、シートにあるすべての名前が対象セル範囲に引用されます。</param>
        <param name="IgnoreRelativeAbsolute">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、名前または参照の参照の種類に関係なく、参照を名前に置き換える。 <b>絶対</b> 参照のみを絶対名、相対参照のみを相対名、および混合参照を混合名でのみ置き換える場合は False。 既定値は <b>True</b> です。</param>
        <param name="UseRowColumnNames">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、指定した範囲の名前が見つからない場合に、指定した範囲を含む行範囲と列範囲の名前を使用します。 <b>引数と</b> 引数を <paramref name="OmitColumn" /> 無視する <paramref name="OmitRow" /> 場合は False。 既定値は <b>True</b> です。</param>
        <param name="OmitColumn">省略 <b>可能なオブジェクト</b>です。 参照を行方向の名前に置き換えるには、 <b>True</b> を指定します。 参照されているセルが数式と同じ列にあり、行方向の名前を持つセル範囲に含まれるときだけ、列方向の名前を省略できます。 既定値は <b>True</b> です。</param>
        <param name="OmitRow">省略 <b>可能なオブジェクト</b>です。 参照を列方向の名前に置き換えるには、 <b>True</b> を指定します。 参照されているセルが数式と同じ行にあり、列方向の名前を持つセル範囲に含まれるときだけ、行方向の名前を省略できます。 既定値は <b>True</b> です。</param>
        <param name="Order">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" /> 可能です。 セル参照が行方向と列方向の範囲名で置き換えられるとき、行と列のどちらの名前を先に表示するかを指定します。 <b>XlApplyNamesOrder</b>定数の 1 つを指定できます<b>。xlColumnThenRow</b><b>xlRowThenColumn</b><paramref name="default" /></param>
        <param name="AppendLast">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、名前の定義を置き換え、定義された最後の名前の定義 <paramref name="Names" /> も置き換える。 <b>名前</b> の定義のみを置き換える場合は <paramref name="Names" /> False。 既定値は <b>False</b> です。</param>
        <summary>指定したセル範囲のセルに名前を付けます。</summary>
        <returns>To be added.</returns>
        <remarks><para>Array 関数を使用 <b>して</b> 、引数の名前のリストを作成 <paramref name="Names" /> できます。</para>
          <para>シート全体に名前を引用するには、Cells.ApplyNames を使ってください。</para>
          <para>名前を "適用解除" することはできません。名前を削除するには、メソッドを <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> 使用します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定された対象セル範囲にアウトラインの既定のスタイルを適用します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数領域の <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 選択範囲のすべての範囲を表すコレクションを返します。</summary>
        <value>To be added.</value>
        <remarks><para>1 つの選択範囲の <b>場合、Areas</b> プロパティは、元のオブジェクト自体である 1 つのオブジェクトを含む <see cref="T:Microsoft.Office.Interop.Excel.Range" /> コレクションを返します。 選択範囲が複数のセル範囲の場合、 <b>Areas</b> プロパティは各選択範囲を 1 つのオブジェクトとして持つ、1 つのコレクションを返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><b>文字列</b> が必要です。 オートコンプリートの対象となる文字列を指定します。</param>
        <summary>オートコンプリートのリストから、指定された文字列と適合する候補を返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>オートコンプリートの一致がない場合、またはリスト内の複数のエントリが完了する文字列と一致する場合、このメソッドは空の文字列を返します。</para>
          <para>このメソッドは、オートコンプリート機能がオフになっていても動作します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination">必須 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクト。 オートフィルの書き込み先になる Range オブジェクトを指定します。 基準となるデータの入ったセル範囲も含むようにします。</param>
        <param name="Type">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" /> 可能です。 オートフィルの種類を指定します。 これらの<b>XlAutoFillType</b>定数のいずれかを指定できます<b>。xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b> <paramref name="default" /> <b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>この引数が<b>xlFillDefault</b>または省略された場合、Microsoft Excel はソース範囲に基づいて最も適切な塗りつぶしの種類を選択します。</param>
        <summary>指定された対象セル範囲内のセルに対してオートフィルを実行します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field">省略 <b>可能なオブジェクト</b>です。 フィルターの対象となるフィールド番号を整数で指定します。フィールド番号は、リストの左側から始まります。つまり、最も左側にあるフィールドはフィールド番号 1 になります。</param>
        <param name="Criteria1">省略 <b>可能なオブジェクト</b>です。 抽出条件 ("101" などの文字列)。 "=" を使用して空白フィールドを検索するか、"" を使用して非 &lt; &gt; ブランク フィールドを検索します。 この引数を省略すると、条件は All <b>です</b>。 <paramref name="Operator" /> <b>xlTop10Items の</b>場合は、アイテムの数 <paramref name="Criteria1" /> (たとえば"10") を指定します。</param>
        <param name="Operator">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> 可能です。 <b>xlAnd</b>xlBottom10Items xlBottom10Percent xlOr xlTop10Items xlTop10Percent Use xlAnd と xlOr の 1 つの<b>XlAutoFilterOperator</b>クラスの定数のいずれかを指定できます。 <paramref name="default" /> <b></b><b></b><b></b><b></b><b></b> <b></b> <b></b> <paramref name="Criteria1" /> <paramref name="Criteria2" /></param>
        <param name="Criteria2">省略 <b>可能なオブジェクト</b>です。 2 番目の抽出条件となる文字列を指定します。 Criteria1 および Operator と組み合わせて使い、複合抽出条件を構築します。</param>
        <param name="VisibleDropDown">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、フィルター処理されたフィールドの AutoFilter ドロップダウン矢印が表示されます。 <b>False</b> を指定すると、フィルター処理されたフィールドの AutoFilter ドロップダウン矢印が非表示になります。 既定値は <b>True</b> です。</param>
        <summary>オートフィルターを使ってリストにフィルターをかけます。</summary>
        <returns>To be added.</returns>
        <remarks><para>オブジェクトを <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> 取得するには、 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> オブジェクトにプロパティを適用 <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> します。</para>
          <para>この引数をすべて省略すると、このメソッドでは、指定された範囲内の AutoFilter ドロップダウン矢印の表示を単に切り替えます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>対象セル範囲の列の幅や行の高さを内容に合わせて調節します。</summary>
        <returns>To be added.</returns>
        <remarks><para>式は、行または行の範囲、または列または列の範囲である必要があります。 これ以外の場合、このメソッドはエラーになります。</para>
          <para>列幅の 1 単位は標準スタイルの 1 文字分の幅に相当します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> 可能です。 指定した AutoFormat.一部の <b>XlRangeAutoFormat</b> 定数は、選択またはインストールした言語サポート (英語など) によっては使用できない場合があります。</param>
        <param name="Number">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、オートフォーマットに数値形式が含まれます。 既定値は、 <b>は True です</b> 。</param>
        <param name="Font">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、オートフォーマットにフォント形式が含まれます。 既定値は <b>True</b> です。</param>
        <param name="Alignment">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、AutoFormat に配置が含まれます。 既定値は <b>True</b> です。</param>
        <param name="Border">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、オートフォーマットに罫線の書式が含まれます。 既定値は <b>True</b> です。</param>
        <param name="Pattern">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、オートフォーマットにパターン形式が含まれます。 既定値は <b>True</b> です。</param>
        <param name="Width">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、列の幅と行の高さがオートフォーマットに含まれます。 既定値は <b>True</b> です。</param>
        <summary>定義済みの形式を使用して、指定した範囲の書式を自動的に設定します。</summary>
        <returns>To be added.</returns>
        <remarks><para>範囲が 1 つのセルの場合、このメソッドはセルを囲むアクティブ領域の書式も設定します。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したセル範囲にアウトラインを自動的に作成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>指定されたセル範囲が 1 つのセルのときは、シート全体にアウトラインが作成されます。 既存のアウトラインはすべて、新しいアウトラインに置換されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> 可能です。 罫線の線のスタイル。 <b>XlLineStyle</b>クラスの定数は<b>、xlContinuous</b> <paramref name="default" /> <b>xlDash</b><b>XlDashDot xlDashDot</b><b>xlDot</b><b>xlDouble</b><b></b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b>のいずれかを指定できます。</param>
        <param name="Weight">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> 可能です。 罫線の太さを指定します。 <b>XlBorderWeight</b>定数の 1 つを指定できます<b>。xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></param>
        <param name="ColorIndex">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> 可能です。 罫線の色を現在のカラー パレットのインデックス番号または <b>XlColorIndex</b> 定数で指定します。 XlColorIndex 定数は<b>、xlColorIndexAutomatic</b> <b></b> <paramref name="default" /> <b>xlColorIndexNone の定数の 1 つを指定できます。</b></param>
        <param name="Color">省略 <b>可能なオブジェクト</b>です。 罫線の色を示す RGB 値を指定します。</param>
        <summary>範囲に罫線を追加し、新しい罫 <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> 線 <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> の 、、 <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> およびプロパティを設定します。</summary>
        <returns>To be added.</returns>
        <remarks><para>両方を指定しない <paramref name="ColorIndex" /> か <paramref name="Color" /> 、または両方を指定する必要があります。</para>
          <para>どちらも指定できますが、 <paramref name="LineStyle" /> <paramref name="Weight" /> 両方を指定できません。 両方の引数を省略すると、既定の太さでの罫線が使用されます。</para>
          <para>このメソッドでは選択範囲全体が罫線で囲まれるのであって、範囲内の各セルが罫線で囲まれるわけではありません。 すべてのセルの罫線を設定するには <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" /> 、Borders コレクションの <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" /> 、 、および <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> プロパティを設定する必要があります。 罫線を消去するには、消去する範囲に含まれているすべてのセルの <b>LineStyle</b> プロパティを <b>xlLineStyleNone</b> に設定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary>内部使用のため予約済みです。</summary>
        <returns><see cref="T:System.Object" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイルの罫線またはセル範囲 (条件付き書式の一部として定義された範囲を含む) を表すコレクション <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> を返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ワークシート上のセルの指定範囲を計算します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したセル範囲を計算します。</summary>
        <returns><b>Object</b></returns>
        <remarks><para>このメソッドは、指定したセル範囲のセルを左上隅から行の右隅まで、行の長い順序 <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> で計算します。 なおこれは、セル範囲の計算を行ううえで Excel 2000 以前のバージョンで採用されている処理と同じものとなります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲のセルを表す<b>Range</b>オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">省略 <b>可能なオブジェクト</b>です。 返す先頭文字を指定します。 この引数に 1 を指定するか、省略すると、このプロパティは先頭文字から始まる文字列範囲を返します。</param>
        <param name="Length">省略 <b>可能なオブジェクト</b>です。 返す文字数を指定します。 この引数を省略すると、このプロパティは文字列の残りの部分 (文字の後のすべて) を返 <paramref name="Start" /> します。</param>
        <summary>オブジェクト テキスト内 <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> の文字範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para><b>Characters</b> オブジェクトを使用して、テキスト文字列内の文字の書式を設定できます。</para>
          <para><b>Characters</b> オブジェクトはコレクションではありません。</para>
          <para>オブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> 場合は <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> 、メソッドです。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">省略 <b>可能なオブジェクト</b>です。 単語がメイン 辞書に見つからない場合に調べるユーザー辞書のファイル名を示す文字列。 この引数を省略すると、現在指定されている辞書が使用されます。</param>
        <param name="IgnoreUppercase">省略 <b>可能なオブジェクト</b>です。 <b>True</b>を指定Microsoft Excel大文字の単語を無視します。<b>False</b>を指定Microsoft Excel大文字の単語をチェックします。 この引数を省略すると、現在の設定が使われます。</param>
        <param name="AlwaysSuggest">省略 <b>可能なオブジェクト</b>です。 <b>True</b>を指定するとMicrosoft Excelスペルが見つかったときに、候補の代替スペルの一覧が表示されます。<b>False</b>を指定すると、Microsoft Excel入力中に一時停止する必要があります。 この引数を省略すると、現在の設定が使われます。</param>
        <param name="SpellLang">省略 <b>可能なオブジェクト</b>です。 辞書に使用した言語を指定します。 プロパティで使用される <b>MsoLanguageID</b> 値のいずれかを指定 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> できます。</param>
        <summary>オブジェクトのスペルをチェックします。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッドには戻り値はありません。Microsoft Excelスペル チェック ダイアログ ボックスが表示されます。</para>
          <para>ワークシートのヘッダー、フッター、オブジェクトを確認するには、オブジェクトでこのメソッドを使用 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> します。</para>
          <para>セルとメモのみをチェックするには、プロパティによって返されるオブジェクトと一緒にこのメソッドを使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクト全体をクリアします。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲からすべてのコメントを消去します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択範囲から数式と文字を削除します。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッドはグラフからデータを消去しますが、書式設定は残ります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトの書式設定をクリアします。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定された範囲からすべてのハイパーリンクを削除します。</summary>
        <remarks><para>指定した範囲でメソッドを呼び出すのは、[ホーム] タブの [編集] セクションの [クリア] ドロップダウン リストから [ハイパーリンクのクリア] コマンドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> するのと同じです。ハイパーリンクだけが削除されます。テキストや書式設定など、他のすべてのセルコンテンツは影響を受けません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲内のすべてのセルからコメントを削除します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定した範囲のアウトラインを消去します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の最初の領域の最初の列の番号を返します。</summary>
        <value>To be added.</value>
        <remarks><para>列番号は、列 A のときは 1、列 B のときは 2 のように、数値で返されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">必須<b>オブジェクト 。</b> 指定したセルと比較する単一セルを指定します。</param>
        <summary>各列の比較セルと内容が異なるすべてのセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の列を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>複数のセル範囲を含む <b>Range</b> オブジェクトに対してこのプロパティを使用すると、選択範囲の中で最初に選択した領域の列が返されます。 たとえば <b>、Range</b> オブジェクトに A1:B2 と C3:D4 の 2 つの領域がある場合、プロパティは 4 ではなく <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> 2 を返します。 複数領域の選択範囲を含む可能性がある範囲でこのプロパティを使用するには、オブジェクトのプロパティをテストして、範囲に複数の領域が含まれているかどうかを <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> 判断します。 複数の領域が含まれている場合は、セル範囲の領域ごとにループします。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲内のすべての列の幅を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>列幅の単位は、標準スタイルの 1 文字分の幅に相当します。プロポーショナル フォントでは、数字の 0 の幅が列幅の単位になります。</para>
          <para>プロパティを <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> 使用して、列の幅をポイント単位で返します。</para>
          <para>対象セル範囲内のすべての列が同じ幅である場合、<b>ColumnWidth</b> プロパティはその値を返します。 If columns in the range have different widths, this property returns <b>Null</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の左上隅にあるセルに関連付けられたコメントを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> を返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources">省略 <b>可能なオブジェクト</b>です。 統合元範囲を参照する、R1C1 形式の文字列を指定します。 指定するセル参照には、必ず統合するシートのパスを含めます。</param>
        <param name="Function">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 可能です。 <b>XlConsilidationFunction</b>定数は<b>、xlAverage</b> <paramref name="default" /> <b>xlCountNums</b><b>xlMax xlMin</b><b></b><b>xlProduct</b><b>xlStDevP</b><b></b><b></b><b>xlSum xlVar</b><b>xlVarP</b><b></b>のいずれかを指定できます。</param>
        <param name="TopRow">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、連結範囲の一番上の行の列タイトルに基づいてデータが統合されます。 <b>False</b> を指定すると、データを位置別に統合できます。 既定値は <b>False</b> です。</param>
        <param name="LeftColumn">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、連結範囲の左側の列の行タイトルに基づいてデータが統合されます。 <b>False</b> を指定すると、データを位置別に統合できます。 既定値は <b>False</b> です。</param>
        <param name="CreateLinks">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、統合でワークシート リンクが使用されます。 <b>False</b> を指定すると、データが統合コピーされます。 既定値は <b>False</b> です。</param>
        <summary>複数のワークシートにある複数のセル範囲を、1 枚のワークシートの 1 つのセル範囲に統合します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">省略 <b>可能なオブジェクト</b>です。 コピー先のセル範囲。 この引数を省略すると、クリップボードにコピーされます。</param>
        <summary>範囲を、指定の範囲またはクリップボードにコピーします。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">必須<b>オブジェクト 。</b> セル範囲にコピーする <b>Recordset</b> オブジェクトを指定します。</param>
        <param name="MaxRows">省略 <b>可能なオブジェクト</b>です。 ワークシートにコピーするレコードの最大数を指定します。 この引数を省略すると、<b>Recordset</b> オブジェクトのすべてのレコードをコピーします。</param>
        <param name="MaxColumns">省略 <b>可能なオブジェクト</b>です。 ワークシートにコピーするフィールドの最大数を指定します。 この引数を省略すると、<b>Recordset</b> オブジェクトのすべてのフィールドをコピーします。</param>
        <summary>ADO オブジェクトまたは DAO <b>Recordset</b> オブジェクトの内容を、指定した範囲の左上隅からワークシートにコピーします。</summary>
        <returns>To be added.</returns>
        <remarks><para>Recordset オブジェクト <b>に OLE</b> オブジェクトが含まれるフィールドが含まれている場合、このメソッドは失敗します。</para>
          <para>コピーは <b>Recordset</b> オブジェクトのカレント レコードの位置から行われます。コピーが完了すると、<b>Recordset</b> オブジェクトの <b>EOF</b> プロパティは <b>True</b> になります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> 可能です。 図をコピーする方法を指定します。 <b>XlCopyPictureFormat</b>の次の定数のいずれかを指定できます<b>。xlBitmap</b><b>xlPicture</b><paramref name="default" /></param>
        <param name="Format">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> 可能です。 ピクチャの形式を指定します。 <b>XlPictureAppearance</b>の定数は<b>、xlPrinter</b>です。 図は、印刷時に表示される画像としてコピーされます。<b>xlScreen</b> <paramref name="default" /> . ピクチャは画面の表示にできる限り近い形でコピーされます。</param>
        <summary>選択しているオブジェクトを図としてクリップボードにコピーします。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内にあるオブジェクトの数を返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の値の中で最大の値をカウントします。 読み取り専用です。</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top">省略 <b>可能なオブジェクト</b>です。 先頭行のラベルを使用して名前を作成するには、 <b>True</b> を設定します。 既定値は <b>False</b> です。</param>
        <param name="Left">省略 <b>可能なオブジェクト</b>です。 左端列のラベルを使用して名前を作成するには、 <b>True</b> を設定します。 既定値は <b>False</b> です。</param>
        <param name="Bottom">省略 <b>可能なオブジェクト</b>です。 最下行のラベルを使用して名前を作成するには、 <b>True</b> を設定します。 既定値は <b>False</b> です。</param>
        <param name="Right">省略 <b>可能なオブジェクト</b>です。 右端列のラベルを使用して名前を作成するには、 <b>True</b> を設定します。 既定値は <b>False</b> です。</param>
        <summary>シートの対象セル範囲内の文字列を使って、その指定された範囲の名前を作成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>、、のいずれかを指定しない場合、Microsoft Excel指定した範囲の図形に基づいて、テキスト ラベルの位置 <paramref name="Top" /> <paramref name="Left" /> <paramref name="Bottom" /> <paramref name="Right" /> が推測されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Appearance">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="ContainsPICT">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="ContainsBIFF">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="ContainsRTF">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="ContainsVALU">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <summary>Macintosh でのみ使用されるキーワードのヘルプを要求しました。 このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</summary>
        <value>To be added.</value>
        <remarks><para>指定したオブジェクトが Microsoft Excel で作成された場合、このプロパティは、16 進数 5843454C に相当する文字列 XCEL を返します。</para>
          <para><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。 たとえば、Microsoft Excel の作成元コードは XCEL です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したセルが配列の一部である場合は、配列全体を表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の領域 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>現在の選択範囲は、空白の行と空白の列の任意の組み合わせで囲まれた範囲です。</para>
          <para>このプロパティは、メソッドなど、現在の領域全体を含む選択範囲を自動的に展開する多くの操作に役立 <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> ちます。</para>
          <para>このプロパティは、保護されたワークシートでは使うことができません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">省略 <b>可能なオブジェクト</b>です。 貼り付け先のセル範囲。 この引数を省略すると、クリップボードに貼り付けられます。</param>
        <summary>オブジェクトを切り取り、クリップボードまたは指定された範囲に貼り付けます。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲を切り取るときは、連続しているセルを対象とする必要があります。</para>
          <para>対象がグラフのときは、埋め込みグラフのみを切り取ることができます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol">省略 <b>可能なオブジェクト</b>です。 データ系列をそれぞれ行または列に入力するには <b>、xlRows</b> 定数または <b>xlColumns</b> 定数を指定できます。 この引数を省略すると、範囲のサイズと図形が使用されます。</param>
        <param name="Type">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> 可能です。 XlDataSeriesType クラスの<b>定数は、xlAutoFill</b> <b></b><b>xlDataSeriesLinear</b> <paramref name="default" /> <b>xlChronological</b><b>xlGrowth</b>クラスの定数のいずれかを指定できます。</param>
        <param name="Date">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> 可能です。 引数 Type が<b>xlChronological の場合、Date</b>引数はステップ日付単位を示します。 <b></b> <b>XlDataSeriesDate</b>クラスの定数の 1 つを指定できます<b>。xlDay</b> <paramref name="default" /> <b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></param>
        <param name="Step">省略 <b>可能なオブジェクト</b>です。 連続データの増分値です。 既定値は 1 です。</param>
        <param name="Stop">省略 <b>可能なオブジェクト</b>です。 連続データの停止値です。 この引数を省略すると、対象セル範囲の終端まで繰り返されます。</param>
        <param name="Trend">省略 <b>可能なオブジェクト</b>です。 <b>直線</b> 的な傾向または成長傾向を作成するには、True を指定します。 <b>False</b> を指定すると、標準データ系列が作成されます。 既定値は <b>False</b> です。</param>
        <summary>指定されたセル範囲に連続データを作成します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">省略 <b>可能なオブジェクト</b>です。 セルを削除した後で他のセルをどのようにシフトするかを指定します。 次のいずれかの定数を指定 <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> できます。 <b>xlShiftToLeft または</b> <b>xlShiftUp</b>です。 この引数を省略すると、セル範囲の形に応じてシフト方向が自動的に決定されます。</param>
        <summary>オブジェクトを削除します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのすべての <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 依存を含む範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>複数の依存オブジェクトがある場合は、複数の選択範囲 <b>(Range</b> オブジェクトの共用体) を指定できます。</para>
          <para><b>Dependents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Excel 4.0 マクロ シートのダイアログ ボックス定義テーブルで定義されているダイアログ ボックスを表示して、選択されたコントロールのインデックス番号を返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッドは、選択したコントロールの数を返します。ユーザーが [キャンセル] ボタンをクリックした場合は <b>False</b> を返します。</para>
          <para>返されるオブジェクトは、4.0 マクロ シートのダイアログ ボックス定義 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Microsoft Excel参照する必要があります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのすべての直接依存を含む範囲を表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>複数の依存オブジェクトがある場合は、複数の選択範囲 <b>(Range</b> オブジェクトの共用体) を指定できます。</para>
          <para><b>Direct Dependents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのすべての直接の前例を含む範囲を表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para><b>DirectPrecedents</b> プロパティはアクティブ シートでのみ実行され、リモート参照をトレースできないことに注意してください。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>次の再計算が発生したときに再計算する範囲を指定します。</summary>
        <remarks><para>このメソッドは、再計算が必要と思Microsoft Excelセルに対して、指定された範囲を強制的 <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> に再計算します。</para>
          <para>アプリケーションが手動計算モードの場合、メソッドを使用して、再計算Excelセルを識別するように指示 <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> します。 アプリケーションが自動再計算モードの場合、 <b>Dirty</b> メソッドを使用すると、再計算が行われます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集されたセル範囲内のすべての変更を破棄します。</summary>
        <remarks><para>OLAP データ ソースに基づく範囲の場合、このメソッドは、セルに入力されたすべての値と数式を削除し、更新操作を実行して、データ ソースから最新の値を取得します。 データ ソースの値を、編集されるすべての値セルの null 参照 (Visual Basic では Nothing) に設定し、OLAP サーバーに対して ROLLBACK TRANSACTION ステートメントを実行します。 OLAP 以外のデータ ソースに基づく範囲の場合、このメソッドはすべての編集されたセルを削除するだけです。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> 範囲の表示設定を表すオブジェクトを取得します。</summary>
        <value>指定 <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> した範囲の表示設定を表すオブジェクト。</value>
        <remarks><para>読み取り専用です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Option">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Name">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Reference">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Appearance">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="ChartSize">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Format">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <summary>Macintosh でのみ使用されるキーワードのヘルプを要求しました。 このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /> 。 移動する方向です。</param>
        <summary>ソース範囲を含む領域の末尾にあるセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>End + 上方向キー、End + 下方向キー、End + 左方向キー、End + 右方向キーのいずれかを押す操作と同等です。 </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む列 (または列) 全体を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む行 (または行) 全体を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがエラー チェック オプションにアクセスできます。</summary>
        <value>To be added.</value>
        <remarks><para>オブジェクトを <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> 参照して、エラー チェック オプションに関連付けられたインデックス値の一覧を表示します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> エクスポートするファイル形式の種類。</param>
        <param name="Filename">省略 <b>可能オブジェクト</b> 保存するファイルのファイル名。 完全なパスを含めるか、short_Excel2007フォルダーにファイルを保存できます。</param>
        <param name="Quality">省略<b>可能なオブジェクト</b>通常、. <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 発行されたファイルの品質を指定します。</param>
        <param name="IncludeDocProperties">ドキュメント <b>のプロパティ</b> を含 <b>める場合は、オプション</b> の Object を True に設定します。それ以外の場合 <b>は False です</b>。</param>
        <param name="IgnorePrintAreas">発行 <b>時に</b> 設定 <b>されている印刷</b> 領域を無視するには、オプションのオブジェクトを True に設定します。それ以外の場合 <b>は False です</b>。</param>
        <param name="From">省略 <b>可能オブジェクト</b> 発行を開始するページの番号。 この引数を省略すると、先頭のページから発行が開始されます。</param>
        <param name="To">省略 <b>可能オブジェクト</b> 発行する最後のページの番号。 この引数を省略すると、最後のページまで発行します。</param>
        <param name="OpenAfterPublish">省略 <b>可能なオブジェクト</b> を <b>True</b> に設定すると、ファイルが発行された後にビューアーにファイルが表示されます。それ以外の場合 <b>は False です</b>。</param>
        <param name="FixedFormatExtClassPtr">FixedFormatExt クラスへの<b>省略可能なオブジェクト ポインター</b> 。 <b></b></param>
        <summary>指定された形式のファイルにエクスポートします。</summary>
        <remarks><para>この方法は、固定形式のファイルにエクスポートするためのアドインの初期化にも対応しています。たとえば、コンバーターが存在する場合は、Excel はファイル形式を変換します。通常は、ユーザーが変換を開始します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲の上端のセルを下方向のセル範囲に複写します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲の上端の行のセルの内容と書式がセル範囲中のほかのセルに複写されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲の右端のセルを左方向のセル範囲に複写します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲の右端の列のセルの内容と書式がセル範囲中のほかのセルに複写されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲の左端のセルを右方向のセル範囲に複写します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲の左端の列のセルの内容と書式がセル範囲中のほかのセルに複写されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたセル範囲の下端のセルを上方向のセル範囲に複写します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲の下端の行のセルの内容と書式がセル範囲中のほかのセルに複写されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">必須<b>オブジェクト 。</b> 検索するデータです。 指定できるのは、文字列、または任意の Microsoft Excel のデータ型です。</param>
        <param name="After">省略 <b>可能なオブジェクト</b>です。 このセルの後から検索を開始します。 これは、ユーザー インターフェイスから検索が実行されたときにアクティブなセルの場所に対応しています。 After は <b>、</b> 範囲内の 1 つのセルである必要があります。 検索では、このセルが開始されます。指定したセルは、メソッドがこのセルに折り返すまで <paramref name="after" /> 検索されません。 この引数を指定しない場合、範囲の左上隅にあるセルの後から検索が開始されます。</param>
        <param name="LookIn">省略 <b>可能なオブジェクト</b>です。 情報の種類。</param>
        <param name="LookAt">省略 <b>可能なオブジェクト</b>です。 xlWhole または <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> <b>xlPart</b> の定数のいずれかを <b>指定できます</b>。</param>
        <param name="SearchOrder">省略 <b>可能なオブジェクト</b>です。 次のいずれかの定数を <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> 指定できます。 <b>xlByRows または</b> <b>xlByColumns</b>。</param>
        <param name="SearchDirection">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> 可能です。 検索の方向を指定します。 次のいずれかの XlSearchDirection 定数を指定できます<b>。xlNext</b> <paramref name="default" /> <b>xlPrevious</b></param>
        <param name="MatchCase">省略 <b>可能なオブジェクト</b>です。 大文字と小文字を区別するには、 <b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="MatchByte">省略 <b>可能なオブジェクト</b>です。 2 バイト言語のサポートを選択またはインストールした場合にのみ使用されます。 <b>True</b> を指定すると、2 バイト文字が 2 バイト文字のみ一致します。 <b>False</b> を指定すると、2 バイト文字が 1 バイトに相当する文字と一致します。</param>
        <param name="SearchFormat">省略 <b>可能なオブジェクト</b>です。 検索の書式を指定します。</param>
        <summary>範囲内の特定の情報を検索し、その情報が見つかった最初のセルを表す <see cref="T:Microsoft.Office.Interop.Excel.Range" /> オブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>一致するデータが見つからなかった場合、このメソッドは <b>Nothing</b> を返します。</para>
          <para>このメソッドは、選択範囲やアクティブ セルには影響を与えかねない。</para>
          <para>、 <paramref name="LookIn" /> 、 <paramref name="LookAt" /> の設定 <paramref name="SearchOrder" /> は <paramref name="MatchByte" /> 、このメソッドを使用する度に保存されます。 次にメソッドを呼び出す時にこれらの引数に値を指定しない場合は、保存された値が使用されます。 これらの引数を設定すると、[検索] ダイアログ ボックスの設定が変更され、また、[検索] ダイアログ ボックスで設定を変更すると、引数を省略した場合に使用される保存された値が変更されます。 問題を回避するには、このメソッドを使用するたびに、これらの引数を明示的に設定します。</para>
          <para>and メソッドを <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> 使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> して検索を繰り返します。</para>
          <para>検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</para>
          <para>より複雑なパターンに一致するセルを見つけるには、<b>For Each...Next</b> ステートメントを <b>Like</b>演算子と共に使用します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">省略 <b>可能なオブジェクト</b>です。 指定したセルの下方 (行のときは右、列のときは下) のセルから検索を開始します。 検索がユーザー インターフェイスから実行されるときは、ワークシート上で検索を行う場合のアクティブ セルに相当します。 範囲内の <paramref name="After" /> 1 つのセルである必要があります。 検索では、このセルが開始されます。指定したセルは、メソッドがこのセルに折り返すまで <paramref name="after" /> 検索されません。 この引数を指定しない場合、範囲の左上隅にあるセルの後から検索が開始されます。</param>
        <summary>メソッドで開始された検索を続行 <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>同じ条件に一致する次のセルを検索し、そのセルを表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</para>
          <para>このメソッドは、選択範囲やアクティブ セルには影響を与えかねない。</para>
          <para>検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After">省略 <b>可能なオブジェクト</b>です。 指定したセルの上方 (行のときは左、列のときは上) のセルから検索を開始します。 ワークシート上で検索を行う場合のアクティブ セルに相当します。 範囲内の <paramref name="After" /> 1 つのセルである必要があります。 検索では、このセルが開始されます。指定したセルは、メソッドがこのセルに折り返すまで <paramref name="before" /> 検索されません。 この引数を指定しない場合、範囲の左上のセルの前に検索が開始されます。</param>
        <summary>メソッドで開始された検索を続行 <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>同じ条件に一致する前のセルを検索し、そのセルを表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。</para>
          <para>このメソッドは、選択範囲やアクティブ セルには影響を与えかねない。</para>
          <para>検索は指定された範囲の最後に達すると、範囲の最初に戻って検索を繰り返します。同じ範囲を繰り返して検索しないようにするには、最初に検索内容が見つかったセルの位置を保存しておき、次のセルが見つかるたびに、そのセルの位置と保存しておいたセルの位置を比較するようにします。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>TRUE は、Excel のフラッシュフィル機能が有効で、アクティブになっていることを示します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Font" /> のフォントを表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> のすべての条件付き書式を表すコレクションを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A1 スタイルの表記では、マクロの言語では、オブジェクトの数式を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>OLAP データ ソースでは、このプロパティを使用できません。</para>
          <para>セルに定数が入力されているときは、このプロパティはその定数を返します。セルが空のときは、この <b>Formula</b> プロパティは空の文字列を返します。セルが空のときは、<b>Formula</b> プロパティは、数式バーでの表示と同じ形式で、等号を含む数式を文字列として返します。</para>
          <para>セルの値または数式に日付を設定すると、Excel はそのセルに日付書式または時刻書式が既に設定されているかどうかをチェックします。書式が設定されていないときは、数値書式は標準の日付の短い形式になります。</para>
          <para>範囲が 1 次元または 2 次元の範囲の場合は、数式を同じ次元の配列に設定できます。 同様に、数式を Basic 配列に挿入できます。</para>
          <para>セル範囲に数式を設定すると、範囲内のすべてのセルにその数式が入ります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の配列式を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは、1 つの数式または配列を返します (または、設定できます)。</para>
          <para>指定した範囲に配列数式が含まれている場合、このプロパティは Null を返 <b>します</b>。</para>
          <para>このプロパティを使用して配列数式を入力する場合は、A1 参照スタイルではなく R1C1 参照スタイルを使用する必要があります (2 番目の例を参照)。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ワークシートが保護されているときに数式が非表示になるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>ワークシートが保護 <b>されているときに</b> 数式が非表示になる場合、このプロパティは True を返します。 指定した範囲に<b>、FormulaHidden</b>が True に等しいセルと<b></b><b>、FormulaHidden</b>が<b>False</b>のセルが含まれている場合は Null を返<b>します</b>。</para>
          <para>このプロパティをプロパティと混同 <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> して使用しない。 ブックが保護され、ワークシートが保護されていない場合、数式は非表示にされませんが、ワークシートが保護されている場合にのみ表示されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の数式ラベルの種類を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティの戻り値は、範囲にラベルがない場合は <b>xlNone、</b> または次のいずれかの <b>XlFormulaLabel 定数</b> を指定できます。</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlColumnLabels</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlMixedLabels</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlNoLabels</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlRowLabels</b>
              </description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクトの数式を A1 参照形式で、コード実行時の言語で示します。</summary>
        <value>To be added.</value>
        <remarks><para>セルに定数が含まれている場合、その定数がそのまま返されます。セルが空の場合、空の文字列が返されます。セルに数式が含まれる場合、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</para>
          <para>セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</para>
          <para>範囲が 1 次元または 2 次元の範囲の場合は、数式を同じ次元の配列に設定できます。 同様に、数式を配列に挿入できます。</para>
          <para>セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの数式を R1C1 参照形式で、コード実行時の言語で取得または設定します。</summary>
        <value>To be added.</value>
        <remarks><para>セルに定数が含まれているときには、その定数がそのまま返されます。セルが空のときには、空の文字列が返されます。セルに数式が含まれるときには、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</para>
          <para>セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</para>
          <para>範囲が 1 次元または 2 次元の範囲の場合は、数式を同じ次元の配列に設定できます。 同様に、数式を配列に挿入できます。</para>
          <para>セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクトの数式を R1C1 参照形式で、コード実行時の言語で示します。</summary>
        <value>To be added.</value>
        <remarks><para>セルに定数が含まれている場合、その定数がそのまま返されます。セルが空の場合、空の文字列が返されます。セルに数式が含まれる場合、数式バーの表示と同じ形式の文字列で (等号も付加されます)、その数式が返されます。</para>
          <para>セルの値や数式を日付に設定すると、そのセルが日付や時刻の書式になっているかどうかが確認されます。日付や時刻の書式になっていないときは、既定の日付の形式に変更されます。</para>
          <para>範囲が 1 次元または 2 次元の範囲の場合は、数式を同じ次元の配列に設定できます。 同様に、数式を配列に挿入できます。</para>
          <para>セル範囲に対して数式を設定すると、範囲内のすべてのセルに同じ数式が設定されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されたセル範囲の左上端のセルで関数ウィザードを起動します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal">必須<b>オブジェクト 。</b> セルに返される必要のある目標値を指定します。</param>
        <param name="ChangingCell">必須 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 。 目標値を達成するために変更するセル (Range オブジェクト) を指定します。</param>
        <summary>対象セルに入力されている数式の結果が指定された値になるまで、その数式で変数として指定されているセルの値を変えて計算します。</summary>
        <returns>To be added.</returns>
        <remarks><para>数式が返す値の目標値を設定すると、その数式が目標値を返すために必要な変数の値を算出します。</para>
          <para>目標シークが成功 <b>した</b> 場合、このメソッドは True を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">省略 <b>可能なオブジェクト</b>です。 グループ化する最初の値を指定します。 この引数を省略するか、<b>True</b> を指定すると、フィールドの最初の値が使用されます。</param>
        <param name="End">省略 <b>可能なオブジェクト</b>です。 グループ化する最後の値を指定します。 この引数を省略するか、<b>True</b> を指定すると、フィールドの最後の値が使用されます。</param>
        <param name="By">省略 <b>可能なオブジェクト</b>です。 フィールドが数値の場合は、この引数でグループごとのサイズを指定します。 フィールドが日付の場合、配列内の要素 4 が True で、他のすべての要素が False の場合、この引数は各グループの日数 <paramref name="Periods" /> を指定<b>します</b>。 <b></b> それ以外の場合、この引数は無視されます。 この引数を省略すると、Microsoft Excel は自動的に既定のグループ サイズを選択します。</param>
        <param name="Periods">省略 <b>可能なオブジェクト</b>です。 次の表に示すように、グループの期間を指定するブール値の配列。配列内の要素が True の <b>場合</b>、対応する時間に対してグループが作成されます。要素が False の <b>場合</b>、グループは作成されません。 フィールドが日付フィールドではない場合、この引数は無視されます。</param>
        <summary>オブジェクトがピボットテーブル フィールドのデータ範囲の 1 つのセルを表す場合、Group メソッドは、そのフィールドで数値または日付ベースのグループ化 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を実行します。 <b></b></summary>
        <returns>To be added.</returns>
        <remarks><para><b>Range オブジェクトは</b>、ピボットテーブル フィールドのデータ範囲の 1 つのセルである必要があります。 このメソッドを複数のセルに適用しようとすると、失敗しますが、エラー メッセージは表示されません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したセルが配列数式の一部かどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>指定したセルが <b>配列数式の</b> 一部である場合、このプロパティは True を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲内のすべてのセルに数式が含まれるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティ<b>は、範囲内</b>のすべてのセルに数式が含まれている場合は<b></b>True、範囲内のセルに数式が含まれているセルがない場合は<b>False、</b>それ以外の場合は Null を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の高さ。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行または列が非表示かどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>行または列が <b>非表示の場合</b> 、このプロパティは True を返します。 列全体または行全体を対象とする必要があります。</para>
          <para>このプロパティをプロパティと混同 <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> して使用しない。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクトの水平方向の配置を設定または返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> ハイパーリンクを表すコレクションを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページを Web ページとして保存するときに、指定したセルの識別ラベルを設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>ID ラベルは、別の HTML ドキュメントや同じ Web ページでハイパーリンクの参照先として使用できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルまたはセル範囲のインデント レベルを設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>インデント レベルには、0 ~ 15 の整数を指定できます。</para>
          <para>インデントのレベルに 0 未満または 15 を超える値を設定すると、エラーが発生します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift">省略 <b>可能なオブジェクト</b>です。 セルをシフトする方向を指定します。 次の定数のいずれかを <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> 指定できます。 <b>xlShiftToRight</b> または <b>xlShiftDown</b>です。 この引数を省略すると、セル範囲の形に応じてシフト方向が自動的に決定されます。</param>
        <param name="CopyOrigin">省略 <b>可能なオブジェクト</b>です。 コピー元を指定します。</param>
        <summary>ワークシートまたはマクロ シートの指定された範囲に、空白のセルまたはセル範囲を挿入します。指定された範囲にあったセルはシフトされます。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount">整数型 (<b>Integer</b>) の値を使用します。 現在のインデントに追加するレベルを指定します。インデントのレベルの範囲は 0 ～ 15 です。</param>
        <summary>指定した範囲のインデントを変更します。</summary>
        <remarks><para>インデントのレベルに 0 未満または 15 を超える値を設定し、このメソッドを実行するとエラーが発生します。</para>
          <para>プロパティを <b /> <see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> 使用して、範囲のインデント レベルを返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> の内部を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">必須<b>オブジェクト 。</b> 左から右に、次に上から下に数えて、アクセスするセルのインデックス番号を指定します。 Range.Item(1) は、範囲内の左上のセルを返します。Range.Item(2) は、左上のセルの右側にあるセルをすぐに返します。</param>
        <param name="ColumnIndex">省略 <b>可能なオブジェクト</b>です。 範囲の最初の列を 1 または "A" として、アクセスするセルの列番号を示す数字または列文字を指定します。</param>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> へのオフセットで範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>引数 <paramref name="RowIndex" /> と <paramref name="ColumnIndex" /> 引数は相対オフセットです。 つまり、1 のセルを指定すると、ワークシートの最初の行ではなく、範囲の最初の行のセル <paramref name="RowIndex" /> が返されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>対象セル範囲内の文字列を、そのセル範囲に合わせて割り付けます。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲の大きさが不十分なときは、下のセルに文字列を上書きするかどうかを確認するメッセージが表示されます。 [OK] をクリックすると、文字の割り付けが行われた結果、対象セル範囲外のセル範囲の内容が上書きされます。 このメッセージが表示されるのを防ぐには、プロパティ <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> を False に <b>設定します</b>。 このように設定すると、対象セル範囲が小さい場合には、対象セル範囲外のセルの内容が自動的に上書きされます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列 A の左端から範囲の左端までの距離。</summary>
        <value>To be added.</value>
        <remarks><para>セル範囲が連続していない場合は、先頭の領域が使われます。複数の列を含む範囲の場合は、範囲内で最も左に位置する列が使用されます。</para>
          <para>ウィンドウが最大化されている場合、このプロパティは、ウィンドウの枠線の幅に基づいて変化する負の数を返します。 このプロパティを 0 (ゼロ) に設定すると、アプリケーション ウィンドウが最大化された場合よりも小さいウィンドウになります。 つまり、このプロパティが 0 (ゼロ) の場合、メイン ウィンドウの左側の境界線Microsoft Excel画面にはほとんど表示されません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したセル範囲内の見出し行の数を返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティを使用する前に、 <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> プロパティを使用して範囲の境界を検索します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示されている名前の一覧をワークシートに貼り付けます。範囲の最初のセルから始まる。</summary>
        <returns>To be added.</returns>
        <remarks><para>ワークシート上 <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> のすべての名前のコレクションを取得するには、プロパティを使用します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトまたはオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> のオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を返 <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の左上隅を含むレポートの部分を表す定数 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> を返します。</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>XlLocationInTable には</b> 、次のいずれかの定数 <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> を指定できます。</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlRowHeader</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlColumnHeader</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlPageHeader</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlDataHeader</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlRowItem</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlColumnItem</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlPageItem</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlDataItem</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlTableBody</b>
              </description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトがロックされるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは、<b></b>オブジェクトがロックされている場合は True、シートが保護されているときにオブジェクトを変更できる場合は False、指定した範囲にロックされたセルとロック解除されたセルの両方が含まれている場合は<b>Null</b>を返します。 <b></b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクトの MDX 名を返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。 読み取り専用です。</summary>
        <value>String</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across">省略 <b>可能なオブジェクト</b>です。 指定した範囲のセルを行ごとに結合して、行ごとに別のセルを作成する場合は  <b>True</b> 。 既定値は <b>False</b> です。</param>
        <summary>指定したオブジェクトから結合されたセルを作成 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</summary>
        <remarks><para>結合されたセルには、対象のセル範囲の左上端のセルの値が入ります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を含む結合範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>指定したセルが結合範囲に含されていない場合、このプロパティは指定したセルを返します。</para>
          <para><b>MergeArea</b> プロパティは単一セル範囲でのみ機能します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲またはスタイルに結合されたセルが含まれているかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>範囲または <b>スタイルに結合</b> セルが含まれている場合、このプロパティは True を返します。</para>
          <para>結合されたセルが含まれるセル範囲を選択すると、指定したセル範囲と実際のセル範囲が異なる場合があります。 プロパティを <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> 使用して、選択した範囲のアドレスを確認します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトの名前を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>Range オブジェクトの <b>名前</b> はオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Name" /> です。 他のすべての種類のオブジェクトでは、名前は String <b>です</b>。</para>
          <para>OLAP データ ソースの一意な名前が "[都道府県].[東京都].[東京]"、OLAP 以外のデータ ソースのアイテム名が "東京" とされた場合、<b>Name</b> プロパティ、および関連するプロパティの値を次に示します。</para>
          <list type="table">
            <item>
              <term>Caption</term>
              <description>東京</description>
              <description>東京</description>
            </item>
            <item>
              <term>名前</term>
              <description>[都道府県].[東京都].[東京] (読み取り専用)</description>
              <description>東京</description>
            </item>
            <item>
              <term>SourceName</term>
              <description>[都道府県].[東京都].[東京] (読み取り専用)</description>
              <description>(SQL プロパティと同じ値、読み取り専用)</description>
            </item>
            <item>
              <term>値</term>
              <description>[都道府県].[東京都].[東京] (読み取り専用)</description>
              <description>東京</description>
            </item>
          </list>
          <para>コレクションにインデックスを指定する場合は <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> 、次の表に示す構文を使用できます。</para>
          <list type="table">
            <item>
              <term>式。PivotItems("[Europe].[フランス]。[パリ]")</term>
              <description>式。PivotItems("Paris")</description>
            </item>
          </list>
          <para>プロパティを使用してコレクションの特定のメンバーを参照する場合は、次の表に示すように、テキスト インデックス名 <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> を使用できます。</para>
          <list type="table">
            <item>
              <term>[ヨーロッパ][フランス][パリ]</term>
              <description>東京</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent">省略 <b>可能なオブジェクト</b>です。 移動する方向を指定します。 <b>前</b> 例に向かって移動するには True を指定します。 <b>False を</b> 指定すると、依存する方向に移動します。</param>
        <param name="ArrowNumber">省略 <b>可能なオブジェクト</b>です。 対象となるトレース矢印の番号を指定します。</param>
        <param name="LinkNumber">省略 <b>可能なオブジェクト</b>です。 トレース矢印が外部参照を表すとき、この引数でどの外部参照を対象とするかを指定します。 この引数を省略すると、最初の外部参照を指定したことになります。</param>
        <summary>指定されたセル範囲のトレース矢印をたどって、参照元のセル、参照先のセル、またはエラーの発生したセル (セル範囲) へ移動します。</summary>
        <returns>To be added.</returns>
        <remarks><para>前のセル、依存セル、またはエラー セルを選択し、新しい選択範囲を表 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> すオブジェクトを返します。 指定されたセルにトレース矢印が表示されていないときは、エラーを返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>次のセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは TAB キーをエミュレートしますが、プロパティは選択せずに次のセルを返します。</para>
          <para>保護されたシートでは、ロックされていないセルの中から、次のセルを返します。保護されていないシートでは、指定したセルの右隣のセルを常に返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">省略 <b>可能なオブジェクト</b>です。 コメントに追加する、半角で 255 文字までの文字列を指定します。 テキストは、既存のノートの文字を置き換える位置から <paramref name="Start" /> <paramref name="Length" /> 挿入されます。 この引数を省略すると、このメソッドは、文字の位置から始まるノートの現在のテキスト <paramref name="Start" /> を返 <paramref name="Length" /> します。</param>
        <param name="Start">省略 <b>可能なオブジェクト</b>です。 設定または返されるテキストの開始位置。 この引数を省略すると、最初の文字から設定または取得を開始します。 コメントに文字列を追加するには、既存のコメントの文字数を超える値を指定します。</param>
        <param name="Length">省略 <b>可能なオブジェクト</b>です。 設定または取得する文字数を指定します。 この引数を省略すると、半角で 255 文字を上限として、コメントの開始位置から終了位置までの文字列を設定または取得します。 ノートの末尾に 255 文字を超える文字がある場合、このメソッドは <paramref name="Start" /> 255 文字のみを返します。</param>
        <summary>セル範囲の左上隅にあるセルに関連付けられているセル メモを設定または返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セルノートは範囲コメントに置き換えされています。 詳細については、オブジェクトを参照 <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> してください。</para>
          <para>256 文字以上のコメントを追加するには、このメソッドを使用して最初の 255 文字を指定し、次に 255 文字以内ずつの文字列を追加していきます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトの書式設定コードを設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>指定されたすべてのセル範囲の表示形式が同じでない場合、<b>Null</b> を返します。</para>
          <para>表示形式を示す文字列は、[ セルの書式設定] ダイアログ ボックスの [ 表示形式] の文字列と同じです。 <b>Format 関数は、NumberFormat</b>およびプロパティとは異なる書式コード<b>文字列を</b>使用 <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの言語で文字列としてオブジェクトの書式設定コードを設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para><b>Format 関数は</b>、NumberFormatLocal プロパティと異なる書式コード <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> <b>文字列を使用</b>します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset">省略 <b>可能なオブジェクト</b>です。 オフセットする範囲の行数 (正、負、または 0) を指定します。 正の値は下方向、負の値は上方向のオフセットを表します。 既定値は 0 です。</param>
        <param name="ColumnOffset">省略 <b>可能なオブジェクト</b>です。 オフセットする範囲の列数 (正、負、または 0) を指定します。 正の値は右方向、負の値は左方向のオフセットを表します。 既定値は 0 です。</param>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> からのオフセット範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの向きを返します。</summary>
        <value>To be added.</value>
        <remarks><para>この方向の値は、90 ~ 90 度の整数値を指定できます。</para>
          <para>OLAP データ ソースの場合、ある階層の 1 つのフィールドに対してこのプロパティを設定すると、同じ階層のその他のフィールドにも同じ値が設定されます。ディメンション フィールドは、ピボットテーブル レポートの行フィールド、列フィールド、またはページ フィールドの各領域にのみ配置できます。メジャー フィールドは、データ エリアにのみ配置できます。階層、またはデータ フィールドに <b>xlHidden</b> を設定すると、ピボットテーブル レポートから削除されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した行または列の現在のアウトライン レベルを設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>レベル 1 が最上位のレベルです。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページブレークの場所を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>戻り値には、次のいずれかの定数 <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /> <b /> を指定できます。</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlPageBreakAutomatic</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlPageBreakManual</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlPageBreakNone</b>
              </description>
            </item>
          </list>
          <para>このプロパティでは、自動改ページと手動改ページのどちらの位置も取得できますが、設定できるのは手動改ページの位置 (<b>xlPageBreakManual</b> または <b>xlPageBreakNone</b>) だけです。</para>
          <para>ワークシートにあるすべての手動改ページを削除するには、Cells.PageBreak を <b>xlPageBreakNone</b> に設定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの親オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine">省略 <b>可能なオブジェクト</b>です。 セルを分割する場所を示す左かっこと右かっこを含む文字列。たとえば、"[xxx][xxx]" は、移動先の範囲の最初の列に最初の 3 文字を挿入し、次の 3 文字を 2 番目の列に挿入します。この引数を省略すると、Microsoft Excelの左上のセルの間隔に基づいて列を分割する場所が推測されます。 別の範囲を使用して解析行を推測する場合は、 <b>引数として Range</b> オブジェクトを使用 <paramref name="ParseLine" /> します。 用いる範囲は、分割されているセルのいずれかである必要があります。 引数 <paramref name="ParseLine" /> は、角かっことスペースを含め、255 文字を超えることはできません。</param>
        <param name="Destination">省略 <b>可能なオブジェクト</b>です。 解析 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> されたデータの移動先範囲の左上隅を表すオブジェクト。 この引数を省略すると、分割元のセル範囲になります。</param>
        <summary>指定セル範囲内のデータを分割して、複数のセルに入力します。</summary>
        <returns>To be added.</returns>
        <remarks><para>複数の隣接する列を埋める範囲の内容を分散します。 範囲は、1 つの列幅以下にできます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 可能です。 貼り付けする範囲の部分。 XlPasteType<b></b>定数の 1 つを指定できます。<b>xlPasteAll</b>default<b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormulas xlPasteFormulasAndNumberFormats</b><b></b><b></b><b>xlPasteValidation xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumbersFormats</b></param>
        <param name="Operation">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> 可能です。 貼り付け操作。 <b>XlPasteSpecialOperation</b>定数は<b>、xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b> <paramref name="default" /> <b>xlPasteSpecialOperationSubtract</b>のいずれかを指定できます。</param>
        <param name="SkipBlanks">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、クリップボードの範囲に空白のセルが貼り付け先の範囲に貼り付けされません。 既定値は <b>False</b> です。</param>
        <param name="Transpose">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、範囲が貼り付け時に行と列が転置されます。 既定値は <b>False</b> です。</param>
        <summary>クリップボードから指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> した範囲に a を貼り付けます。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル内の <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 特定のテキスト文字列に関する情報を含むオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは、最新バージョンでの Excel との互換性を提供します。 単一の <b>オブジェクトを取得するには、Phonetics</b>( ) を使用する必要があります。index は、読み取りテキストのインデックス <paramref name="index" /> <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 番号です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> コレクションを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピボットテーブル レポート <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> 内のセルを表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の左上隅を含むピボットテーブル フィールドを表す <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の左上隅を含むピボットテーブル アイテムを表す <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲の左上隅を含むピボットテーブル レポート、またはピボットテーブル レポートに関連付けられたピボットテーブル レポートを表すオブジェクトを <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> ピボットグラフします。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのすべての <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 前例を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>参照元のセル範囲が複数あるときは、複数選択範囲 ( <b>Range</b> オブジェクトの集合) を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのプレフィックス文字を返します。</summary>
        <value>To be added.</value>
        <remarks><para>プロパティが <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> <b>False の場合</b>、このプレフィックス文字はテキスト ラベルの場合は ' または空白になります。 If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前のセル <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>セル範囲 (Range オブジェクト) が対象のとき、このプロパティでは、Shift + Tab キーを押したときの移動先セルと同じセルが返されます。ただし、そのセルを選択する動作は行われません。</para>
          <para>保護されたシートでは、ロックされていないセルの中から前のセルが返されます。保護されていないシートでは、指定したセルの常に左隣のセルが返されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">省略 <b>可能なオブジェクト</b>です。 印刷を開始するページの番号を指定します。 この引数を省略すると、最初のページから印刷します。</param>
        <param name="To">省略 <b>可能なオブジェクト</b>です。 印刷を終了するページの番号を指定します。 この引数を省略すると、最後のページまで印刷します。</param>
        <param name="Copies">省略 <b>可能なオブジェクト</b>です。 印刷部数を指定します。 この引数を省略すると、印刷部数は 1 部になります。</param>
        <param name="Preview">省略 <b>可能なオブジェクト</b>です。 <b>True</b>を指定すると、Microsoft Excel印刷前に印刷プレビューを呼び出す必要があります。<b>False</b> (または省略) を指定すると、オブジェクトを即座に印刷できます。</param>
        <param name="ActivePrinter">省略 <b>可能なオブジェクト</b>です。 アクティブなプリンターの名前を指定します。</param>
        <param name="PrintToFile">省略 <b>可能なオブジェクト</b>です。 <b>True</b> の場合、ファイルへ出力します。 引数 <b>PrToFileName</b> が省略された場合、出力先のファイル名を指定するためのダイアログ ボックスを表示します。</param>
        <param name="Collate">省略 <b>可能なオブジェクト</b>です。 <b>True</b> の場合、部単位で印刷します。</param>
        <param name="PrToFileName">省略 <b>可能なオブジェクト</b>です。 <b>PrintToFile</b> が <b>True</b> の場合、出力先ファイルの名前を指定します。</param>
        <summary>オブジェクトを印刷します。</summary>
        <returns>To be added.</returns>
        <remarks><para>シートまたはブックの全体的なページではなく、印刷されたページの説明と参照の「ページ <paramref name="From" /> <paramref name="To" /> 」。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>内部使用のため予約済みです。</summary>
        <returns><see cref="T:System.Object" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><b>True を</b> 指定すると、変更が有効になります。</param>
        <summary>オブジェクトの印刷プレビュー (印刷時のイメージ) を表示します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> と交差するクエリ テーブルを表すオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">必須<b>オブジェクト 。</b> 範囲の名前を指定します。 A1 形式の参照をコード記述時の言語で指定します。 範囲名には、範囲を表す演算子 (:)、共通部分を表す演算子 (スペース)、または複数の範囲を表す演算子 (,) を含めることができます。 また、ドル記号を含め、無視できます。 範囲の任意の部分には、ローカルに定義した名前を使用できます。 名前を使用する場合、その名前はコード記述時の言語で表されたものと見なされます。</param>
        <param name="Cell2">省略 <b>可能なオブジェクト</b>です。 セル範囲の左上隅と右下隅のセルを指定します。 各引数には、単一のセル、列全体、または行全体を含む <b>Range</b> オブジェクト、あるいはコード記述時の言語で単一のセルの名前を示す文字列を指定できます。</param>
        <summary>セルまたは <see cref="T:Microsoft.Office.Interop.Excel.Range" /> セル範囲を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは Range オブジェクトを <b>基準</b> にしています。 たとえば、選択範囲がセル C3 の場合、Selection.Range("B1") は、プロパティによって返される <b>Range</b> オブジェクトを基準にしたセル D3 を返 <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> します。 一方、ActiveSheet.Range("B1") は常にセル B1 を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの読みの順序を返すか設定します。</summary>
        <value>To be added.</value>
        <remarks><para>戻り値には <b>、xlRTL</b> (右から左 <b>)、xlLTR</b> (左から右)、または xlContext のいずれかの定数を <b>指定できます</b>。</para>
          <para>[!メモ] 選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns">重複 <b>する</b> 情報を含む列のインデックスのオプションの Object Array。  何も渡された場合、すべての列に重複する情報が含まれていると見なされます。</param>
        <param name="Header">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 可能 最初の行にヘッダー情報が含まれるかどうかを指定します。  <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" />は既定値です。ヘッダー <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> の特定をExcelする場合に指定します。</param>
        <summary>値の範囲から重複した値を削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リストから小計を削除します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What">必須<b>オブジェクト 。</b> Excel で検索する文字列を指定します。</param>
        <param name="Replacement">必須<b>オブジェクト 。</b> 置き換える文字列を指定します。</param>
        <param name="LookAt">省略 <b>可能なオブジェクト</b>です。 xlWhole または <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> <b>xlPart</b> の定数のいずれかを <b>指定できます</b>。</param>
        <param name="SearchOrder">省略 <b>可能なオブジェクト</b>です。 次のいずれかの定数を <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> 指定できます。 <b>xlByRows または</b> <b>xlByColumns</b>。</param>
        <param name="MatchCase">省略 <b>可能なオブジェクト</b>です。 大文字と小文字を区別して検索するには、 <b>True</b> を指定します。</param>
        <param name="MatchByte">省略 <b>可能なオブジェクト</b>です。 この引数は、2 バイト言語サポートを選択またはインストールした場合にのみ使用Microsoft Excel。 <b>True</b> を指定すると、2 バイト文字が 2 バイト文字のみ一致します。 <b>False</b> を指定すると、2 バイト文字が 1 バイトに相当する文字と一致します。</param>
        <param name="SearchFormat">省略 <b>可能なオブジェクト</b>です。 メソッドの検索書式を指定します。</param>
        <param name="ReplaceFormat">省略 <b>可能なオブジェクト</b>です。 メソッドの置換書式を指定します。</param>
        <summary>指定されたセル範囲内のセルの文字を示すブール型 (<b>Boolean</b>) の値を返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッドを使用しても、選択範囲またはアクティブ セルは変更されません。</para>
          <para>、 <paramref name="LookAt" /> 、 <paramref name="SearchOrder" /> の設定 <paramref name="MatchCase" /> は <paramref name="MatchByte" /> 、このメソッドを使用する度に保存されます。 次にメソッドを呼び出す時にこれらの引数に値を指定しない場合は、保存された値が使用されます。 これらの引数を設定すると、[検索] ダイアログ ボックスの設定が変更され、また、[検索] ダイアログ ボックスで設定を変更すると、引数を省略した場合に使用される保存された値が変更されます。 問題を回避するには、このメソッドを使用するたびに、これらの引数を明示的に設定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize">省略 <b>可能なオブジェクト</b>です。 新しい範囲の行数を指定します。 この引数を省略すると、新しい行数は変更する前と同じ行数になります。</param>
        <param name="ColumnSize">省略 <b>可能なオブジェクト</b>です。 新しい範囲の列数を指定します。 この引数を省略すると、新しい列数は変更する前と同じ列数になります。</param>
        <summary>指定された範囲のサイズを変更します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲内の最初の領域の最初の行の番号を返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison">必須<b>オブジェクト 。</b> 指定したセル範囲と比較する単一セルを指定します。</param>
        <summary>各行の比較セルと内容が異なるすべてのセルを表すオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲内のすべての行の高さをポイント単位で返します。</summary>
        <value>To be added.</value>
        <remarks><para>指定した範囲の <b>行が</b> 同じ高さではない場合、このプロパティは Null を返します。</para>
          <para>1 行の場合、プロパティの値 <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> は <b>RowHeight プロパティの値と等</b> しくなります。 ただし、Height プロパティを使用 <b>して、</b> セル範囲の高さの合計を取得できます。</para>
          <para><b>RowHeight</b>と Height の他の違い<b>としては、次</b>のようなものがあります。</para>
          <list type="bullet">
            <item>
              <description>
                <b>高</b> さは読み取り専用です。</description>
            </item>
            <item>
              <description>複数の行の <b>RowHeight</b> プロパティを返す場合は、各行の行の高さ (すべての行が同じ高さである場合) または <b>Null</b> (高さが異なる場合) を取得します。 複数の行の <b>Height</b> プロパティを返す場合は、すべての行の合計の高さを取得します。</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲内 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> の行を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks><para>複数のセル範囲を含む <b>Range</b> オブジェクトに対してこのプロパティを使用すると、選択範囲の中で最初に選択した領域の行が返されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg2">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg3">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg4">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg5">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg6">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg7">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg8">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg9">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg10">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg11">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg12">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg13">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg14">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg15">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg16">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg17">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg18">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg19">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg20">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg21">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg22">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg23">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg24">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg25">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg26">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg27">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg28">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg29">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <param name="Arg30">省略 <b>可能なオブジェクト</b>です。 関数に渡す引数。</param>
        <summary>指定されたセル範囲にある Excel のマクロを実行します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セル範囲はマクロ シートである必要があります。</para>
          <para>このメソッドの引数では、名前を使用できません。引数には、位置のパスで必ず指定してください。</para>
          <para><b>Run</b> メソッドは、呼び出し先マクロが返す内容を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトを選択します。</summary>
        <returns>To be added.</returns>
        <remarks><para>セルまたはセル範囲を選択するには、Select メソッドを使用します。 1 つのセルをアクティブ セルにする場合は、メソッドを使用 <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトのサーバーで実行できるアクションSharePoint指定 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Actions" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定した <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 範囲内のすべてのセルのオブジェクトを作成します。</summary>
        <remarks><para>指定した範囲に既存の <b>Phonetic</b> オブジェクトが含まれている場合、このメソッドを使用して追加される新しい Phonetic オブジェクトに自動的に上書き (既存は削除) されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定範囲が可視位置に来るようにアクティブ ウィンドウの内容をスクロールします。</summary>
        <returns>To be added.</returns>
        <remarks><para>範囲には、作業中のドキュメントの単一のセルを指定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、1 つのレベルのトレーサー矢印を削除して、従属を指示します。 <b>False</b> を指定すると、1 つのレベルのトレーサー矢印が展開されます。 既定値は <b>False</b> です。</param>
        <summary>アクティブ セル (参照元) から、その値を直接参照しているセル (参照先) に向けてトレース矢印を引きます。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した <b>範囲の</b> アウトラインが展開されている場合は True を返します (列または行の詳細が表示されます)。</summary>
        <value>To be added.</value>
        <remarks><para>指定する範囲は、アウトライン内の 1 つのサマリー列または行である必要があります。</para>
          <para>範囲がピボットテーブル レポートにある場合、アイテムに詳細が表示されている場合、このプロパティは <b>True</b> に設定されます。</para>
          <para>ピボットテーブル レポート内のセル範囲以外が対象のとき、次のことに注意します。</para>
          <list type="bullet">
            <item>
              <description>セル範囲は、単一の集計行または集計列である必要があります。</description>
            </item>
            <item>
              <description>行または列の <b>子</b> が非表示の場合、このプロパティは False を返します。</description>
            </item>
            <item>
              <description>このプロパティを <b>True に設定</b> すると、集計行または列のすべての子が表示されます。</description>
            </item>
            <item>
              <description>このプロパティに <b>False</b> を設定すると、集計行または集計列に対応する詳細行または詳細列をすべて非表示にすることになります。</description>
            </item>
            <item>
              <description>ピボットテーブル レポート内のセル範囲が対象のとき、連続しているセル範囲の場合に限り、一度に複数のセル範囲をこのプロパティに指定することができます。セル範囲が単一セルの場合だけ、このプロパティで値を返すことができます。</description>
            </item>
          </list>
          <para>OLAP データ ソースでは、このプロパティを使用できません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エラーの発生源であるセルに、前例ツリーを通してトレーサーの矢印を描画し、そのセルを含む範囲を返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、1 つのレベルのトレーサー矢印を前例に直接削除できます。 <b>False</b> を指定すると、1 つのレベルのトレーサー矢印が展開されます。 既定値は <b>False</b> です。</param>
        <summary>対象セルが直接参照しているセル (参照元) から、対象セルに向けて矢印を引きます。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用可能な列の幅に収まるテキストが自動的に縮小されるかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは、<b></b>使用可能な列の幅に収まるテキストが自動的に縮小する場合は True を返し、このプロパティが指定した範囲内のすべてのセルに対して同じ値に設定されていない場合は<b>Null</b>を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したセル <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> の識別子を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1">省略 <b>可能なオブジェクト</b>です。 最初の並べ替えフィールド (たとえば、テキスト (ピボットテーブル フィールドまたは範囲名) またはオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ("Dept" または Cells(1, 1) のいずれか)。</param>
        <param name="Order1">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 で指定したフィールドまたは範囲の並べ替え順序 <paramref name="Key1" /> 。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 降順 <paramref name="Key1" /> で並べ替える。<b>xlAscending</b> <paramref name="default" /> . 昇順 <paramref name="Key1" /> で並べ替えます。</param>
        <param name="Key2">省略 <b>可能なオブジェクト</b>です。 2 番目の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクトで指定します。 この引数を省略すると、2 番目の並べ替えフィールドはありません。 ピボット テーブル レポートを並べ替える場合は使用できません。</param>
        <param name="Type">省略 <b>可能なオブジェクト</b>です。 並べ替える要素を指定します。 この引数は、ピボットテーブル レポートを並べ替えるときにのみ使用します。 XlSortType 定数 <b>の 1</b> つを指定できます<b>。xlSortLabels を指定します</b>。 ピボットテーブル レポートをラベルで並べ替える。<b>xlSortValues</b>. ピボットテーブル レポートを値で並べ替えます。</param>
        <param name="Order2">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 で指定したフィールドまたは範囲の並べ替え順序 <paramref name="Key2" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 降順 <paramref name="Key2" /> で並べ替える。<b>xlAscending</b> <paramref name="default" /> . 昇順 <paramref name="Key2" /> で並べ替えます。</param>
        <param name="Key3">省略 <b>可能なオブジェクト</b>です。 3 番目の並べ替えフィールドを、テキスト (範囲名) または <b>Range</b> オブジェクトで指定します。 この引数を省略すると、3 番目の並べ替えフィールドはありません。 ピボットテーブル レポートの並べ替えには使用できません。</param>
        <param name="Order3">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 で指定したフィールドまたは範囲の並べ替え順序 <paramref name="Key3" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 降順 <paramref name="Key3" /> で並べ替える。<b>xlAscending</b> <paramref name="default" /> . 昇順 <paramref name="Key3" /> で並べ替えます。</param>
        <param name="Header">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 可能です。 先頭の行に見出しを含めるかどうかを指定します。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlYesNoGuess 定数</b><b>xlGuess のいずれかを指定できます</b>。 ヘッダー Microsoft Excel確認し、ヘッダーが存在するかどうかを判断します。<b>xlNo</b> <paramref name="default" /> . (範囲全体を並べ替える必要があります)。<b>xlYes</b>. (範囲全体を並べ替える必要はありません)。</param>
        <param name="OrderCustom">省略 <b>可能なオブジェクト</b>です。 この引数は、ユーザー設定の並べ替え順のリスト内の番号を示す、1 から始まる整数です。 省略すると、 <paramref name="OrderCustom" /> 通常の並べ替えが使用されます。</param>
        <param name="MatchCase">省略 <b>可能なオブジェクト</b>です。 <b>大文字</b> と小文字を区別する並べ替えを実行する場合は True。 <b>大文字</b> と小文字を区別しない並べ替えを行う場合は False。 ピボットテーブル レポートの並べ替えには使用できません。</param>
        <param name="Orientation">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> 可能です。 並べ替えの方向を指定します。 <b>XlSortOrientation 定数は、xlSortRows</b>です<b></b> <paramref name="default" /> 。 行で並べ替え。<b>xlSortColumns</b>. 列単位で並べ替えます。</param>
        <param name="SortMethod">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> 可能です。 並べ替えの種類を指定します。 選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。 <b>XlSortMethod</b>定数の 1 つを指定できます。<b>xlStroke</b> Sorting by the strokes in each character.<b>xlPinYin</b> <paramref name="default" /> . 中国語の発音表記の順で並べ替えます。</param>
        <param name="DataOption1">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 でテキストを並べ替える方法を指定します <paramref name="Key 1" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えの数値データとしてテキストを扱います。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <param name="DataOption2">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 でテキストを並べ替える方法を指定します <paramref name="Key 2" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えの数値データとしてテキストを扱います。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <param name="DataOption3">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 キー 3 でテキストを並べ替える方法を指定します。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えの数値データとしてテキストを扱います。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <summary>指定した範囲に 1 つのセルしか含めない場合は、ピボットテーブル レポート、範囲、またはアクティブ領域を並べ替える。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッドを使用する度に、特定のワークシートの 、の設定 <paramref name="Header" /> <paramref name="Order1" /> <paramref name="Order2" /> <paramref name="Order3" /> <paramref name="OrderCustom" /> <paramref name="Orientation" /> が保存されます。 次にメソッドを呼び出す時にこれらの引数に値を指定しない場合は、保存された値が使用されます。 保存された値を使用しない場合は <b>、Sort</b> メソッドを使用する度に、これらの引数を明示的に設定します。</para>
          <para>数値データに変換できないテキスト文字列は、通常は並べ替えされます。</para>
          <para><b>Sort</b> メソッドで引数を何も定義しない場合、選択している範囲が昇順で並べ替えられます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> 可能です。 並べ替えの種類を指定します。 選択またはインストールされている言語の設定 (たとえば、日本語) によって、これらのいくつかの定数が使用できない場合があります。 <b>XlSortMethod の定数は、xlStroke</b> <b></b>です。 各文字のストローク数で並べ替える。<b>xlPinYin</b> <paramref name="default" /> . 中国語の発音表記の順で並べ替えます。</param>
        <param name="Key1">省略 <b>可能なオブジェクト</b>です。 最初の並べ替えフィールドは、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクト ("Dept" や Cells(1, 1 など) のいずれかです。</param>
        <param name="Order1">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 引数に指定されたフィールドまたは範囲の並べ替え <paramref name="Key1" /> 順序。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 降順 <paramref name="Key1" /> で並べ替える。<b>xlAscending</b> <paramref name="default" /> . 昇順 <paramref name="Key1" /> で並べ替えます。</param>
        <param name="Type">省略 <b>可能なオブジェクト</b>です。 並べ替える要素を指定します。 この引数は、ピボットテーブル レポートを並べ替えるときにのみ使用します。</param>
        <param name="Key2">省略 <b>可能なオブジェクト</b>です。 2 番目の並べ替えフィールドを、テキスト (ピボットテーブル フィールドまたは範囲名) または <b>Range</b> オブジェクトで指定します。 この引数を省略すると、2 番目の並べ替えフィールドはありません。 ピボットテーブル レポートの並べ替えには使用できません。 XlSortType 定数 <b>の 1</b> つを指定できます<b>。xlSortLabels を指定します</b>。 ピボットテーブル レポートをラベルで並べ替える。<b>xlSortValues</b>. ピボットテーブル レポートを値で並べ替えます。</param>
        <param name="Order2">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 引数に指定されたフィールドまたは範囲の並べ替え <paramref name="Key2" /> 順序。 ピボットテーブル レポートの並べ替えには使用できません。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 既定の <paramref name="Key2" /> <b>xlAscending の降順で並べ替</b> え。 昇順 <paramref name="Key2" /> で並べ替えます。</param>
        <param name="Key3">省略 <b>可能なオブジェクト</b>です。 3 番目の並べ替えフィールドを、テキスト (範囲名) または <b>Range</b> オブジェクトで指定します。 この引数を省略すると、3 番目の並べ替えフィールドはありません。 ピボットテーブル レポートの並べ替えには使用できません。</param>
        <param name="Order3">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> 可能です。 引数に指定されたフィールドまたは範囲の並べ替え <paramref name="Key3" /> 順序。 ピボットテーブル レポートの並べ替えには使用できません。 XlSortOrder の<b>定数は</b><b>、xlDescending</b>です。 降順 <paramref name="Key3" /> で並べ替える。<b>xlAscending</b> <paramref name="default" /> . 昇順 <paramref name="Key3" /> で並べ替えます。</param>
        <param name="Header">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> 可能です。 先頭の行に見出しを含めるかどうかを指定します。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlYesNoGuess 定数</b><b>xlGuess のいずれかを指定できます</b>。 ヘッダー Microsoft Excelを特定し、ヘッダーが存在するかどうかを判断できます。<b>xlNo</b> <paramref name="default" /> . 範囲全体を並べ替える必要があります。<b>xlYes</b>. 範囲全体が並べ替えられません。</param>
        <param name="OrderCustom">省略 <b>可能なオブジェクト</b>です。 この引数は、ユーザー設定の並べ替え順のリスト内の番号を示す、1 から始まる整数です。 省略すると <paramref name="OrderCustom" /> 、(通常の並べ替え順序) が使用されます。</param>
        <param name="MatchCase">省略 <b>可能なオブジェクト</b>です。 <b>大文字</b> と小文字を区別する並べ替えを実行する場合は True。 <b>大文字</b> と小文字を区別しない並べ替えを行う場合は False。 ピボットテーブル レポートの並べ替えには使用できません。</param>
        <param name="Orientation">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> 可能です。 並べ替えの方向を指定します。 <b>XlSortOrientation 定数は、xlSortRows</b>です<b></b> <paramref name="default" /> 。 並べ替えは行で行われます。<b>xlSortColumns</b>. 並べ替えは列別に行われます。</param>
        <param name="DataOption1">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 でテキストを並べ替える方法を指定します <paramref name="Key1" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えの数値データとしてテキストを扱います。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <param name="DataOption2">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 でテキストを並べ替える方法を指定します <paramref name="Key 2" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えの数値データとしてテキストを扱います。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <param name="DataOption3">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> 可能です。 でテキストを並べ替える方法を指定します <paramref name="Key 3" /> 。 ピボットテーブル レポートの並べ替えには使用できません。 <b>XlSortDataOption クラスの定数は</b><b>、xlSortTextAsNumbers</b>です。 並べ替えのテキスト数値データを処理します。<b>xlSortNormal</b> <paramref name="default" /> . 数値データとテキスト データを別々に並べ替えます。</param>
        <summary>東アジアの並べ替えメソッドを使用して範囲またはピボットテーブル レポートを並べ替えるか、範囲にセルが 1 つしか含まれている場合は、アクティブな領域のメソッドを使用します。 たとえば、日本語では五十音順に並べ替えられます。</summary>
        <returns>To be added.</returns>
        <remarks><para>引数が<b>SortSpecial</b>メソッドで定義されていない場合、Microsoft Excelは、並べ替えに選択された選択範囲を昇順で並べ替えます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは、使用しないでください。サウンド メモは Excel から削除されました。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> 範囲のスパークラインの既存のグループを表すオブジェクトを取得します。</summary>
        <value>指定 <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> した範囲のスパークラインの既存のグループを表すオブジェクト。</value>
        <remarks><para>読み取り専用です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection">省略 <b>可能なオブジェクト</b>です。 行順に読み上げるか、列順に読み上げるか。</param>
        <param name="SpeakFormulas">省略 <b>可能なオブジェクト</b>です。 セルに含まれている数式を Text-To-Speech (TTS) エンジンに送る場合は  <b>True</b> 。 セルに数式が含されていない場合は、値が送信されます。 <b>False</b> (既定値) を指定すると、値は常に TTS エンジンに送信されます。</param>
        <summary>範囲内のセルを、行順または列順に読み上げます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" /> 。 取得するセルの種類を指定します。 XlCellType 定数は<b></b><b>、xlCellTypeAllFormatConditions</b>の 1 つを指定できます。 任意の形式のセル。<b>xlCellTypeAllValidation</b>. 検証条件を持つセル。<b>xlCellTypeBlanks</b>. 空のセル。<b>xlCellTypeComments</b>. メモを含むセル。<b>xlCellTypeConstants</b>. 定数を含むセル。<b>xlCellTypeFormulas</b>. 数式を含むセル。<b>xlCellTypeLastCell</b>. 使用範囲の最後のセル。<b>xlCellTypeSameFormatConditions</b>. 同じ形式のセル。<b>xlCellTypeSameValidation</b>. 同じ検証条件を持つセル。<b>xlCellTypeVisible</b>. すべての可視セル</param>
        <param name="Value">省略 <b>可能なオブジェクト</b>です。 <paramref name="Type" /> <b>xlCellTypeConstants</b>または<b>xlCellTypeFormulas</b>の場合、この引数を使用して、結果に含めるセルの種類を決定します。 複数の値を加算して指定すると、複数の種類の定数や数式を指定できます。 この引数を省略すると、すべての定数および数式が対象になります。 次のいずれかの定数を指定 <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> できます。<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></param>
        <summary>指定した型 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> と値に一致するすべてのセルを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Style" /> のスタイルを表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <param name="Format">このパラメーターは Macintosh 専用です。使用しないでください。</param>
        <summary>Macintosh でのみ使用されるキーワードのヘルプを要求しました。 このキーワードに関する詳細については、Office Macintosh Edition の言語リファレンスのヘルプを参照してください。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy">整数型 (<b>Integer</b>) の値を使用します。 グループ化の基準となるフィールドの番号を、1 から始まる整数で指定します。 使用例を参照してください。</param>
        <param name="Function">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 。 小計関数。 <b>XlConsolidationFunction</b>定数の 1 つを指定できます<b>。xlAverage</b><b>xlCount XlCountNums</b><b>xlMax xlMin</b><b></b><b>xlProduct</b><b></b><b>xlStDev xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVarP</b><b></b> <b></b></param>
        <param name="TotalList">必須<b>オブジェクト 。</b> 集計を追加するフィールド表す、1 から始まるオフセット番号の配列で指定します。 使用例を参照してください。</param>
        <param name="Replace">省略 <b>可能なオブジェクト</b>です。 既存の集計表と置き換えるには、<b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="PageBreaks">省略 <b>可能なオブジェクト</b>です。 グループごとに改ページが挿入されるようにするには、<b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="SummaryBelowData">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> 可能です。 集計データを小計を基準に設定します。 次のいずれかの <b>XlSummaryRow</b> 定数を指定できます<b>。xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></param>
        <summary>セル範囲の集計を作成します。指定されたセル範囲が単一セルのときは、アクティブ セル領域を集計します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲が概要の行または列の概要かどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>範囲が概要の <b>行</b> または列の場合、このプロパティは True を返します。</para>
          <para>範囲は、行または列である必要があります。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput">省略 <b>可能なオブジェクト</b>です。 テーブルの行入力として使うセルを指定します。</param>
        <param name="ColumnInput">省略 <b>可能なオブジェクト</b>です。 テーブルの列入力として使うセルを指定します。</param>
        <summary>ワークシートで定義した入力値と数式に基づいて、データ テーブルを作成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>このデータ テーブルは、ワークシートの特定の定数を変化させて、ほかのセルの値への影響を調べるケース スタディのために使います。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトのテキストを返すか設定します。</summary>
        <value>To be added.</value>
        <remarks><para>オブジェクトの <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> 場合、このプロパティは、その表形式のテキストを取得または設定します。 このプロパティを <b>Null</b> 値に設定できません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">省略 <b>可能なオブジェクト</b>です。 結果 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> を配置するMicrosoft Excelオブジェクト。 表示先に指定したセル範囲が複数セルである場合には、左上端のセルが使われます。</param>
        <param name="DataType">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> 可能です。 複数の列に区切るデータの形式を指定します。 <b>XlTextParsingType</b>定数は<b>、xlDelimited </b> <paramref name="default" /> <b>xlFixedWidth の 1 つになります。</b></param>
        <param name="TextQualifier">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 可能です。 <b>XlTextQualifier 定数は、xlTextQualifierDoubleQuote</b> <b></b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b>の 1 つになります。</param>
        <param name="ConsecutiveDelimiter">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、連続した区切り文字を 1 つの区切り文字として認識します。 既定値は <b>False</b> です。</param>
        <param name="Tab">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定 <paramref name="DataType" /> すると <b>、xlDelimited が設定され</b> 、タブ文字が区切り文字になります。 既定値は <b>False</b> です。</param>
        <param name="Semicolon">省略 <b>可能なオブジェクト</b>です。 <b>true</b> を指定 <paramref name="DataType" /> すると <b>、xlDelimited が設定され</b> 、セミコロンが区切り文字になります。 既定値は <b>False</b> です。</param>
        <param name="Comma">省略 <b>可能なオブジェクト</b>です。 <b>true</b> を指定 <paramref name="DataType" /> すると <b>、xlDelimited が設定され</b> 、コンマが区切り文字になります。 既定値は <b>False</b> です。</param>
        <param name="Space">省略 <b>可能なオブジェクト</b>です。 <b>true</b> を指定 <paramref name="DataType" /> すると <b>、xlDelimited が設定され</b> 、スペース文字が区切り文字になります。 既定値は <b>False</b> です。</param>
        <param name="Other">省略 <b>可能なオブジェクト</b>です。 <b>true</b> を指定 <paramref name="DataType" /> すると <b>、xlDelimited が指定され</b> 、引数で指定された文字 <paramref name="OtherChar" /> が区切り文字になります。 既定値は <b>False</b> です。</param>
        <param name="OtherChar">省略 <b>可能なオブジェクト</b> (True の場合 <paramref name="Other" /> は <b>必須</b>)。 区切り文字 when が <paramref name="Other" /> <b>True です</b>。 If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
        <param name="FieldInfo">省略 <b>可能なオブジェクト</b>です。 区切り後の列のデータ形式に関する情報を持つ配列を指定します。 解釈はの値に依存します <paramref name="DataType" /> 。 データが区切り記号で区切られている場合は、この引数に 2 要素配列の配列を使用して、配列内の各 2 要素配列が特定の列の変換オプションを指定するようにします。 最初の要素は列番号 (1 から始め) で、2 番目の要素は列の解析方法を指定する <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> 定数の 1 つです。 <b>XlColumnDataType</b>クラスの定数<b>(xlGeneralFormat) のいずれかを指定できます</b>。 Genera. <b>xlTextFormat</b>. テキスト。<b>xlMDYFormat</b>. MDY 日付。<b>xlDMYFormat</b>. DMY 日付。<b>xlYMDFormat</b>. YMD 日付。<b>xlMYDFormat</b>. MYD 日付。<b>xlDYMFormat</b>. DYM 日付。<b>xlYDMFormat</b>. YDM 日付。<b>xlEMDFormat</b>. EMD 日付。<b>xlSkipColumn</b>. 列をスキップします <b>。xlEMDFormat</b> を使用できるのは、台湾語のサポートがインストールされ、選択されている場合のみです。 <b>xlEMDFormat</b>定数は、台湾の元号の日付が使用されている場合に指定します。列指定子は、任意の順序で指定できます。 入力データ内の特定の列に対して特定の列指定子が存在しない場合、列は [全般] 設定で <b>解析</b> されます。ソース データに固定幅列がある場合、各 2 要素配列の最初の要素は、列の開始文字位置を指定します (整数で、0 (ゼロ) が最初の文字です)。 2 番目の要素は、上の 1 ～ 9 の数値を使って、列のデータ形式を指定します。</param>
        <param name="DecimalSeparator">文字列型 (<b>String</b>) の値を使用します。 Excel で数値を認識する場合に使う小数点の記号です。 既定はシステム設定です。</param>
        <param name="ThousandsSeparator">文字列型 (<b>String</b>) の値を使用します。 Excel で数値を認識する場合に使う桁区切り記号です。 既定はシステム設定です。</param>
        <param name="TrailingMinusNumbers">省略 <b>可能なオブジェクト</b>です。 負記号で始まる数値です。</param>
        <summary>セルに入力されているデータ (1 つのセル内で、カンマ、スペース、タブなどで区切られたデータ) を、複数の列に区切ります。対象となる列は 1 列だけです。</summary>
        <returns>To be added.</returns>
        <remarks><para>次の表は、Excel へのテキストのインポートをさまざまなインポート設定で行った場合の結果を示したものです。数値の結果は右詰めで表示します。</para>
          <list type="table">
            <item>
              <term>ピリオド</term>
              <description>カンマ</description>
              <description>カンマ</description>
              <description>ピリオド</description>
              <description>123.123,45</description>
              <description>123,123.45 (数値)</description>
            </item>
            <item>
              <term>ピリオド</term>
              <description>カンマ</description>
              <description>カンマ</description>
              <description>カンマ</description>
              <description>123.123,45</description>
              <description>123.123,45 (文字列)</description>
            </item>
            <item>
              <term>カンマ</term>
              <description>ピリオド</description>
              <description>カンマ</description>
              <description>ピリオド</description>
              <description>123,123.45</description>
              <description>123,123.45 (数値)</description>
            </item>
            <item>
              <term>ピリオド</term>
              <description>カンマ</description>
              <description>ピリオド</description>
              <description>カンマ</description>
              <description>123,123.45</description>
              <description>123 123.45 (文字列)</description>
            </item>
            <item>
              <term>ピリオド</term>
              <description>カンマ</description>
              <description>ピリオド</description>
              <description>スペース</description>
              <description>123,123.45</description>
              <description>123,123.45 (数値)</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行 1 の上端から範囲の上端までの距離をポイントで返します。</summary>
        <value>To be added.</value>
        <remarks><para>範囲が非大きな場合は、最初の領域が使用されます。 複数の行を含む範囲の場合は、範囲内で最も上に位置する (行番号が一番小さい) 行が使用されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セル範囲のアウトライン レベルを上げます (行、列のアウトライン レベルの番号は減ります)。</summary>
        <returns>To be added.</returns>
        <remarks><para>指定する範囲は、1 行全部か 1 列全部、または複数の行全体や列全体である必要があります。 ピボットテーブル レポートの中のセル範囲の場合、このメソッドはセル範囲に含まれているアイテムのグループを解除します。</para>
          <para>アクティブ セルが親フィールドのフィールドの見出しの中にある場合は、その親フィールド内のすべてのグループがグループ解除され、親フィールドはピボットテーブル レポートから外されます。親フィールド内の最も下位のグループをグループ解除すると、そのフィールド全部がピボットテーブル レポートから外されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>結合された領域をそれぞれのセルに分割します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトの行の高さがシートの標準の高 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> さと等しいかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para><b>Range</b>オブジェクトの<b></b>行の高さがシートの標準の高さと等しい場合は True を返し、範囲に複数の行が含まれている場合は<b>Null</b>を返し、行が同じ高さではない場合は Null を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトの列幅がシートの標準幅 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> と等しいかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para><b>Range</b>オブジェクトの<b></b>列幅がシートの標準幅と等しい場合は True を返し、範囲に複数の列が含まれている場合は<b>Null</b>を返し、列の幅が同じでない場合は Null を返します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> のデータ検証を表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType">省略 <b>可能なオブジェクト</b>です。 セル範囲の値のデータ型を指定します。 次のいずれかの定数を指定できます <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> 。<b>xlRangeValueDefault</b>指定したオブジェクトが空の場合は、値 Empty を返します (この場合は <paramref name="default" /> <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <b>IsEmpty</b>関数を使用してテストします)。 <b></b> Range オブジェクト <b>に</b> 複数のセルが含まれている場合は、値の配列を返します (この場合は <b>、IsArray</b> 関数を使用してテストします)。<b>xlRangeValueMSPersistXML</b>    指定した Range オブジェクトのレコードセット表現 <b>を XML</b> 形式で返します。<b>xlRangeValueXMLSpreadsheet</b>    指定した Range オブジェクトの値、書式設定、数式、および名前を XML <b>スプレッドシート</b> 形式で返します。</param>
        <summary>指定した範囲の値を設定または返します。</summary>
        <value>To be added.</value>
        <remarks><para>XML スプレッドシート ファイルのセル範囲のデータを設定する場合、ブックの最初のシートの値のみが使用されます。 XML スプレッドシート形式のセルの非一連のセルを設定または取得することはできません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの値を返すか設定します。</summary>
        <value>To be added.</value>
        <remarks><para><b>Value2</b> プロパティでは、通貨型 (<b>Currency</b>) および日付型 (<b>Date</b>) のデータ型を使用しない点のみが、<b>Value</b> プロパティと異なります。倍精度浮動小数点型 (<b>Double</b>) を使用することにより、これらの 2 種類のデータ型の値を浮動小数点数として返すことができます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクトの垂直方向の配置を設定または返します。</summary>
        <value>.</value>
        <remarks><para>返される垂直方向の配置指定子は、次の読み取り/書き込みオブジェクトの値 <b>のいずれかを指定</b> できます。</para>
          <list type="bullet">
            <item>
              <description>
                <b>xlBottom</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlCenter</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlDistributed</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlJustify</b>
              </description>
            </item>
            <item>
              <description>
                <b>xlTop</b>
              </description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の幅をポイント単位で指定します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定した範囲 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> を含むワークシートを表すオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクト内Microsoft Excelテキストを折り返すかどうかを指定します。</summary>
        <value>To be added.</value>
        <remarks><para>このプロパティは、<b></b>オブジェクトMicrosoft Excel折り返す場合は True を返し、指定した範囲にテキストをラップするセルと折り返さなかった他のセルが含まれている場合は<b>Null</b>を返します。</para>
          <para>文字列をセル内に表示するために、行の高さは必要に応じて自動的に調節されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> にマップされた要素の Xpath を表すオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> します。</summary>
        <value>To be added.</value>
        <remarks><para>XML 機能は、XML スプレッドシート形式でのファイルの保存を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>