<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4412cafa67d52ea9efc54de3f1e443c5836dcde473b44fb60a4dbfe60f2517cc" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54507273" /></Metadata><TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アプリケーションで現在開いているすべてのオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Microsoft Excelです。</summary>
    <remarks><para>Workbooks <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> コレクションを取得するには、 <b>プロパティを使用</b> します。</para>
      <para>新しい <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> 空のブックを作成し、コレクションに追加するには、このメソッドを使用します。</para>
      <para>このメソッドを <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> 使用してファイルを開きます。</para>
      <para>単一の Workbook オブジェクトの使用の詳細 <b>については</b> 、オブジェクトを参照 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> してください。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>内部使用のために予約されています。 </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>内部使用のために予約されています。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">省略 <b>可能なオブジェクト</b>です。 新しいブックの作成方法を決定します。 この引数が既存の Microsoft Excel ファイルの名前を指定する文字列の場合、指定したファイルをテンプレートとして新しいブックが作成されます。 この引数が定数の場合、新しいブックには、指定した種類の 1 つのシートが含まれます。 <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" />定数は<b>、xlWBATChart、xlWBATExcel4IntlMacroSheet、xlWBATExcel4MacroSheet、</b><b>または</b> <b>xlWBATWorksheet</b>のいずれかを指定できます。 <b></b> この引数を省略すると、Microsoft Excelシート数を含む新しいブックが作成されます (シート数は<b>SheetsInNewWorkbook プロパティによって設定</b>されます)。</param>
        <summary>新しいブックを作成します。 新しいブックが作業中のブックになります。 オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>引数に <paramref name="Template" /> ファイルを指定する場合は、ファイル名にパスを含めできます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトMicrosoft Excelします。 読み取り専用です。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 チェックアウトするファイルの名前を指定します。</param>
        <summary><b>True</b> の場合、指定したブックをサーバーからチェックアウトできます。値の取得および設定が可能です。ブール型 ( <b>Boolean</b> ) の値を使用します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 チェックアウトするファイルの名前を指定します。</param>
        <summary>指定したブックをサーバーからローカル コンピューターにコピーして編集します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトを閉じます。</summary>
        <remarks><para>Close メソッドを使用してブックを <b>閉</b> じると、ブック内Auto_Closeマクロは実行されません。 メソッドを <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> 使用して、自動閉じるマクロを実行します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内にあるオブジェクトの数を返します。 整数型 ( <b>Integer</b>) の値を使用します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。 Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。 読み取り専用 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> です。</summary>
        <value>To be added.</value>
        <remarks><para><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。 たとえば、Microsoft Excel の作成元コードは XCEL です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">必須<b>オブジェクト 。</b> オブジェクトの名前またはインデックス番号を指定します。</param>
        <summary>コレクションから単一のオブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 開くブックのファイル名です。</param>
        <param name="UpdateLinks">省略 <b>可能なオブジェクト</b>です。 ファイル内のリンクを更新する方法を指定します。 この引数が省略された場合は、リンクの更新方法を指定するように求められます。 それ以外の場合、この引数は次の表に示す値の 1 つになります。WKS、WK1、または WK3 形式でファイルを開いている場合、引数が 2 の場合、Microsoft Excel はファイルに添付されたグラフからグラフを生成します。 Microsoft Excel <paramref name="UpdateLinks" /> 引数が 0 の場合、グラフは作成されません。</param>
        <param name="ReadOnly">省略 <b>可能なオブジェクト</b>です。 ブックを読み取り専用モードで開くには、True を指定します。</param>
        <param name="Format">省略 <b>可能なオブジェクト</b>です。 テキスト Microsoft Excel開く場合、この引数は、次の表に示すように区切り文字を指定します。 この引数を省略すると、現在の区切り文字が使用されます。</param>
        <param name="Password">省略 <b>可能なオブジェクト</b>です。 パスワード保護されたブックを開くのに必要なパスワードを指定します。 この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</param>
        <param name="WriteResPassword">省略 <b>可能なオブジェクト</b>です。 書き込み保護されたブックに書き込みをするために必要なパスワードを指定します。 この引数を省略した場合、パスワードが必要なブックでは、パスワードの入力を促すダイアログ ボックスがユーザーに表示されます。</param>
        <param name="IgnoreReadOnlyRecommended">省略 <b>可能なオブジェクト</b>です。 [ <b>読み取り専用を推奨する</b>] チェック ボックスをオンにして保存されたブックを開くときでも、読み取り専用を推奨するメッセージを非表示にするには、 <b>True</b> を指定します。</param>
        <param name="Origin">省略 <b>可能なオブジェクト</b>です。 ファイルがテキスト ファイルの場合、この引数は、それが発生した場所を示します (コード ページとキャリッジ リターン/改行 (CR/LF) を正しくマップできます)。 <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>xlMacintosh、xlWindows、</b><b>または</b><b>xlMSDOS のいずれかの定数を指定できます</b>。 この引数を省略すると、現在のオペレーティング システムが使用されます。</param>
        <param name="Delimiter">省略 <b>可能なオブジェクト</b>です。 ファイルがテキスト ファイルで、<b>Format</b> 引数が 6 の場合は、この引数は区切り記号として使用する文字を指定する文字列です。 たとえば、タブには Chr(9) を、カンマには ","、セミコロンには ";" を使用し、またはカスタム文字を使用します。 文字列の最初の文字のみが使用されます。</param>
        <param name="Editable">省略 <b>可能なオブジェクト</b>です。 ファイルが 4.0 アドインMicrosoft Excel場合、この引数は<b>True</b>を指定してアドインを開き、表示ウィンドウになります。 この引数に <b>False</b> を指定するか、この引数を省略すると、アドインは非表示の状態で開かれ、ウィンドウとして表示することはできません。 このオプションは、5.0 以降で作成Microsoft Excelには適用されません。 ファイルが新しいテンプレートExcel場合は<b>、True</b>を使用して、指定したテンプレートを編集用に開き<b>、False</b>を使用して、指定したテンプレートに基づいて新しいブックを開きます。 既定値は <b>False</b> です。</param>
        <param name="Notify">省略 <b>可能なオブジェクト</b>です。 ファイルが読み取り/書き込みモードで開けない場合に、ファイルを通知リストに追加するには、<b>True</b> を指定します。 ファイルが読み取り専用モードで開かれて通知リストに追加され、ファイルが編集可能になった時点でユーザーに通知されます。 ファイルが開けない場合に、このような通知を行わずにエラーを発生させるには、 <b>False</b> を指定するか省略します。</param>
        <param name="Converter">省略 <b>可能なオブジェクト</b>です。 ファイルを開く際に最初に試すファイル コンバーターのインデックスです。 指定したファイル コンバータが最初に試されます。このコンバーターがファイルを認識しない場合は、他のすべてのコンバーターが試されます。 コンバーター インデックスは、プロパティによって返されるコンバーターの行番号で構成 <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> されます。</param>
        <param name="AddToMru">省略 <b>可能なオブジェクト</b>です。 最近使用したファイルの一覧にブックを追加するには、 <b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="Local">省略 <b>可能なオブジェクト</b>です。 Excel の言語設定 (コントロール パネルの設定を含む) に合わせてファイルを保存するには、<b>True</b> を指定します。 <b>False</b> (既定) は、Visual Basic for Applications (VBA) の言語に対してファイルを保存します (Workbooks.Open が実行される VBA プロジェクトが古い国際化 XL5/95 VBA プロジェクトである場合を含む場合は、通常は米国英語)。</param>
        <param name="CorruptLoad">省略 <b>可能なオブジェクト</b>です。 次のいずれかの定数を指定できます<b>。xlNormalLoad、xlRepairFile、</b><b>および</b> <b>xlExtractData です</b>。 値が指定されていない場合の既定の動作は通常は正常ですが、ファイルを開Excel場合は、安全な読み込みまたはデータ復旧が可能です。 最初の試行は正常です。 ファイルExcel中に動作を停止した場合、2 番目の試行は安全な読み込みです。 再びExcel停止した場合、次の試みはデータ復旧です。</param>
        <summary>ブックを開きます。</summary>
        <returns>To be added.</returns>
        <remarks><para>既定では、ファイルをプログラムで開くとき、マクロは有効です。 このプロパティを <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> 使用して、プログラムでファイルを開く際に使用するマクロ セキュリティ モードを設定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 接続文字列を指定します。</param>
        <param name="CommandText">省略 <b>可能なオブジェクト</b>です。 クエリのコマンド テキストを指定します。</param>
        <param name="CommandType">省略 <b>可能なオブジェクト</b>です。 クエリのコマンド タイプを指定します。 使用できるコマンドの種類は、Default、SQL、および Table です。</param>
        <param name="BackgroundQuery">省略 <b>可能なオブジェクト</b>です。 クエリの背景。</param>
        <param name="ImportDataAs">省略 <b>可能なオブジェクト</b>です。 クエリの形式を決定します。</param>
        <summary>データベースを表 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 読み込まれるテキスト ファイルの名前を指定します。</param>
        <param name="Origin">省略 <b>可能なオブジェクト</b>です。 テキスト ファイルの元のプラットフォームを指定します。 <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> <b>xlMacintosh、xlWindows、</b><b>または</b><b>xlMSDOS のいずれかの定数を指定できます</b>。 また、目的のコード ページのコード ページ番号を表す整数値を指定することもできます。 たとえば、"1256" の場合、ソース テキスト ファイルのエンコードは "アラビア語 (Windows)" であることを示します。 この引数を省略すると、このメソッドは、 テキスト インポート ウィザードの [ <b>元のファイル</b>] の現在の設定値を使用します。</param>
        <param name="StartRow">省略 <b>可能なオブジェクト</b>です。 テキストの解析を開始する行番号。 既定値は 1 です。</param>
        <param name="DataType">省略 <b>可能なオブジェクト</b>です。 ファイルに含まれるデータの形式を指定します。 次のいずれかの定数を指定 <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> できます。 <b>xlDelimited</b> または <b>xlFixedWidth</b>。 この引数を省略すると、ファイルを開いたときにデータの形式が自動的に決められます。</param>
        <param name="TextQualifier">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> 可能です。 文字列の引用符を指定します。 これらの定数の 1 <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> つを指定できます。<b>xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></param>
        <param name="ConsecutiveDelimiter">省略 <b>可能なオブジェクト</b>です。 連続した区切り文字を 1 文字として扱うときは  <b>True</b> を指定します。 既定値は <b>False</b> です。</param>
        <param name="Tab">省略 <b>可能なオブジェクト</b>です。 True を指定すると、タブ文字が区切り文字になります <paramref name="DataType" /> <b>(xlDelimited である必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="Semicolon">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、セミコロンが区切り文字になります <paramref name="DataType" /> <b>(xlDelimited である必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="Comma">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、コンマ文字が区切り文字になります <paramref name="DataType" /> <b>(xlDelimited である必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="Space">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を指定すると、スペース文字が区切り文字になります <paramref name="DataType" /> <b>(xlDelimited である必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="Other">省略 <b>可能なオブジェクト</b>です。 <b>引数</b> で指定された文字を区切り文字に設定するには、True <paramref name="OtherChar" /> を指定します <paramref name="DataType" /> <b>(xlDelimited を指定する必要があります</b>)。 既定値は <b>False</b> です。</param>
        <param name="OtherChar">省略 <b>可能なオブジェクト</b> (True の場合 <paramref name="Other" /> は <b>必須</b>)。 True の場合の区切り文字 <paramref name="Other" /> を指定 <b>します</b>。 If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
        <param name="FieldInfo">省略 <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> 可能です。 各列のデータ形式を示す配列を指定します。 解釈はの値に依存します <paramref name="DataType" /> 。 データが区切り記号で区切られている場合は、この引数に 2 要素配列の配列を使用して、配列内の各 2 要素配列が特定の列の変換オプションを指定するようにします。 最初の要素は列番号 (1 から始め) で、2 番目の要素は、列の解析方法を指定する<b>XlColumnDataType</b>クラスの定数の 1 つです。<b>xlGeneralFormat</b>General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip Column<b></b> <b>XlEMDFormat</b>を使用できるのは、台湾語のサポートをインストールして選択した場合のみです。 <b>xlEMDFormat</b>定数は、台湾の元号の日付が使用されている場合に指定します。列指定子は、任意の順序で指定できます。 入力データに特定の列の列指定子がない場合、列は [全般] 設定で解析されます。<b>メモ</b>列をスキップするように指定する場合は、残りのすべての列の型を明示的に指定する必要があります。またはデータが正しく解析されません。データに認識可能な日付がある場合、列の設定が [全般] の場合でも、セルはワークシートの日付として書式設定されます。 さらに、列に上記の日付形式のいずれかを指定し、データに認識された日付が含まれている場合、ワークシートのセル形式は General になります。ソース データに固定幅列がある場合、各 2 要素配列の最初の要素は、列の開始文字の位置を指定します (整数、文字 0 (ゼロ) が最初の文字)。 The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</param>
        <param name="TextVisualLayout">省略 <b>可能なオブジェクト</b>です。 テキストの視覚的な配置を指定します。</param>
        <param name="DecimalSeparator">省略 <b>可能なオブジェクト</b>です。 Excel で数値を認識する場合に使う小数点の記号です。 既定はシステム設定です。</param>
        <param name="ThousandsSeparator">省略 <b>可能なオブジェクト</b>です。 Excel で数値を認識する場合に使う桁区切り記号です。 既定の設定はシステム設定です。次の表に、さまざまなインポート設定のテキストをExcel結果を示します。 数値の結果は右詰めで表示します。</param>
        <param name="TrailingMinusNumbers">省略 <b>可能なオブジェクト</b>です。</param>
        <param name="Local">省略 <b>可能なオブジェクト</b>です。</param>
        <summary>テキスト ファイルを分析して読み込みます。テキスト ファイルを 1 枚のシートとして、それを含む新しいブックを開きます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 開くファイル名を指定します。</param>
        <param name="Stylesheets">省略 <b>可能なオブジェクト</b>です。 適用する XSL 変換 (XSLT) スタイル シート処理命令を指定する単一の値または値の配列。</param>
        <param name="LoadOption">省略 <b>可能なオブジェクト</b>です。 Excel が XML データ ファイルを開く方法を指定します。 次のいずれかの定数を <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> 指定できます<b>。xlXmlLoadImportToList</b> XML データ ファイルの内容を XML リストに格納します。<b>xlXmlLoadMapXml XML</b> 構造作業ウィンドウに XML データ ファイル <b>のスキーマを</b> 表示します。<b>xlXmlLoadOpenXml</b> XML データ ファイルを開きます。 ファイルの内容がフラット化されます。<b>xlXmlLoadPromptUser</b> ファイルを開く方法を選択するようにユーザーに求めるメッセージが表示されます。</param>
        <summary>XML データ ファイルを開きます。 オブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> します。</summary>
        <returns>To be added.</returns>
        <remarks><para>XML 機能は、XML スプレッドシート形式でのファイルの保存を除き、Microsoft Office Professional Edition 2003 および Microsoft Office Excel 2003 でのみ使用できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの親オブジェクトを取得します。値の取得のみ可能です。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>