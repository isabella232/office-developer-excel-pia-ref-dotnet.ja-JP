<Type Name="Shapes" FullName="Microsoft.Office.Interop.Excel.Shapes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="530f667e5dd841d8274e1c621bc1dc888d3f3f007a275d9f3403ddb97f9309ad" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54516243" /></Metadata><TypeSignature Language="C#" Value="public interface Shapes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shapes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Shapes" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shapes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shapes : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定したシート上のすべての <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> オブジェクトのコレクション。</summary>
    <remarks><para>各 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> オブジェクトは、図面レイヤー内のオブジェクト (AutoShape、フリーフォーム、OLE オブジェクト、ピクチャなど) を表します。</para>
      <para>
        <b>注</b>: ドキュメント上の図形のサブセットを操作する場合 (たとえば、ドキュメント上の AutoShapes のみを操作する場合や、選択した図形のみを実行する場合) は、操作する図形を含むコレクションを作成する必要 <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> があります。</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>内部使用のため予約済みです。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCallout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCallout (Microsoft.Office.Core.MsoCalloutType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCallout([in]valuetype Microsoft.Office.Core.MsoCalloutType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCallout (Type As MsoCalloutType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCallout(Microsoft::Office::Core::MsoCalloutType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoCalloutType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Core.MsoCalloutType" /> 。 引き出し線の種類を指定します。 <b>MsoCalloutType</b>定数の 1 つ<b>を指定できます。msoCalloutOne を指定します</b>。 水平または垂直の 1 セグメントの引き出し線。<b>msoCalloutTwo</b>. 自由に回転する単一セグメントの引き出し線。<b>msoCalloutMixed</b>.<b>msoCalloutThree</b>. 2 セグメントの線。<b>msoCalloutFour</b>. 3 セグメントの線。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左端を基準にして吹き出しのテキスト ボックスの左端の位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左端を基準にして吹き出しのテキスト ボックスの左端の位置をポイント単位で指定します。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 吹き出しのテキスト ボックスの幅をポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 吹き出しのテキスト ボックスの高さをポイント単位で指定します。</param>
        <summary>輪郭なしの吹き出しを作成します。 新しい吹 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> き出しを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>メソッドを使用すると、さまざまな吹き出しを挿入 <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)" /> できます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCanvas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCanvas (float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCanvas([in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCanvas (Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCanvas(float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <summary>内部使用のため予約済みです。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddChart (object XlChartType, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddChart([in]object XlChartType, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddChart(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart (Optional XlChartType As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XlChartType" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XlChartType">To be added.</param>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <summary>このオブジェクト、メンバー、または列挙体は非推奨です。ユーザーのコード内で使用されるものではありません。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddChart2 (object Style, object XlChartType, object Left, object Top, object Width, object Height, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddChart2([in]object Style, [in]object XlChartType, [in]object Left, [in]object Top, [in]object Width, [in]object Height, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddChart2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart2 (Optional Style As Object, Optional XlChartType As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object, Optional NewLayout As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object" />
        <Parameter Name="XlChartType" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Style">グラフのスタイルです。 XlChartType で指定されたグラフの種類の既定のスタイルを取得するには、-1 <b>を使用します。</b></param>
        <param name="XlChartType">グラフの種類です。</param>
        <param name="Left">アンカーを基準にして、グラフの左端の位置をポイント単位で示します。</param>
        <param name="Top">アンカーを基準にして、グラフの上端の位置をポイント単位で示します。</param>
        <param name="Width">グラフのポイント単位の幅です。</param>
        <param name="Height">グラフのポイント単位の高さです。</param>
        <param name="NewLayout">true の場合、新しい動的書式ルールを使用してグラフが挿入されます (Title がオンで、凡例は複数の系列がある <paramref name="NewLayout" /> 場合のみオンです)。</param>
        <summary>ドキュメントにグラフを追加します。 グラフを表 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> すオブジェクトを返し、指定したコレクションに追加します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddConnector (Microsoft.Office.Core.MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddConnector([in]valuetype Microsoft.Office.Core.MsoConnectorType Type, [in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConnector (Type As MsoConnectorType, BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddConnector(Microsoft::Office::Core::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoConnectorType" />
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> 。 追加するコネクタの種類を指定します。 <b>MsoConnectorType</b>定数の 1 つを指定できます<b>。msoConnectorElbow</b><b>msoConnectorTypeMixed</b><b>msoConnectorCurve</b><b>msoConnectorStraight</b></param>
        <param name="BeginX">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてコネクタの始点の水平位置をポイント単位で指定します。</param>
        <param name="BeginY">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてコネクタの始点の垂直位置をポイント単位で指定します。</param>
        <param name="EndX">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてコネクタの終点の水平位置をポイント単位で指定します。</param>
        <param name="EndY">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてコネクタの終点の垂直位置をポイント単位で指定します。</param>
        <summary>コネクタを作成します。 新しいコネクタ <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>コネクタを追加しても、すべてのものに接続されるわけではありません。 and メソッド <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> を <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> 使用して、コネクタの先頭と末尾をドキュメント内の他の図形に接続します。</para>
          <para>コネクタを図形につなげる場合、コネクタの大きさと位置は、必要に応じて自動的に調整されます。 したがって、コネクタを他の図形に接続する場合、コネクタを追加するときに指定する位置と寸法は関係ありません。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCurve (object SafeArrayOfPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCurve([in]object SafeArrayOfPoints) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCurve (SafeArrayOfPoints As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCurve(System::Object ^ SafeArrayOfPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1719)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">必須<b>オブジェクト 。</b> 曲線の両端とコントロール ポイントを指定する 2 次元の座標の配列を指定します。 最初に指定した点が始点となり、次に指定した 2 つの点が最初のベジェ セグメントのコントロール ポイントとなります。 次に、この曲線に追加するセグメントごとに、1 つの中継点と 2 つのコントロール ポイントを指定します。 最後に指定した点が、曲線の終点になります。 曲線のセグメントの数を n とすると、常に 3n + 1 個の点を指定する必要があります。</param>
        <summary>ワークシート内 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> のベジエ曲線を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddDiagram (Microsoft.Office.Core.MsoDiagramType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddDiagram([in]valuetype Microsoft.Office.Core.MsoDiagramType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDiagram (Type As MsoDiagramType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddDiagram(Microsoft::Office::Core::MsoDiagramType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoDiagramType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Core.MsoDiagramType" /> 。 図の種類。 <b>MsoDiagramType</b>定数の 1 つを指定できます<b>。msoDiagramCycle</b>連続サイクルダイアグラムの種類を持つプロセス図です。<b>msoDiagramMixed</b>混合ダイアグラムの種類。<b>msoDiagramOrgChart</b>階層リレーションシップ ダイアグラムの種類。<b>msoDiagramPyramid</b>基礎ベースのリレーションシップダイアグラムの種類。<b>msoDiagramRadial</b>コア要素のリレーションシップを示す図の種類。<b>msoDiagramTarget</b>目標に向けた手順を示す図の種類。<b>msoDiagramVenn</b>要素間の重なりの領域を示す図の種類。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 ワークシートの左上隅を基準にした図の左上隅の位置 (ポイント数)。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 ワークシートの左上隅を基準にした図の左上隅の位置 (ポイント数)。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 図の幅をポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 図の高さをポイントで指定します。</param>
        <summary>図を作成します。 新しい図 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFormControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddFormControl (Microsoft.Office.Interop.Excel.XlFormControl Type, int Left, int Top, int Width, int Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddFormControl([in]valuetype Microsoft.Office.Interop.Excel.XlFormControl Type, [in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFormControl (Type As XlFormControl, Left As Integer, Top As Integer, Width As Integer, Height As Integer) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddFormControl(Microsoft::Office::Interop::Excel::XlFormControl Type, int Left, int Top, int Width, int Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1738)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFormControl" />
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" /> 。 Microsoft Excel コントロールの種類を指定します。 ワークシートでは編集ボックスを作成できません。 <b>XlFormControl</b>クラスの定数の 1 つを指定できます。<b>xlButtonControl</b><b>xlCheckBox</b><b>xlDropDown xlEditBox</b><b></b><b>xlGroupBox xlLabel XlListBox</b><b></b><b>xlOptionButton</b><b></b><b>xlScrollBar</b><b>xlSpinner</b></param>
        <param name="Left">整数型 (<b>Integer</b>) の値を使用します。 ワークシートのセル A1 の左上隅またはグラフの左上端を基準として、新しいオブジェクトの初期座標をポイント単位で指定します。</param>
        <param name="Top">整数型 (<b>Integer</b>) の値を使用します。 ワークシートのセル A1 の左上隅またはグラフの左上端を基準として、新しいオブジェクトの初期座標をポイント単位で指定します。</param>
        <param name="Width">整数型 (<b>Integer</b>) の値を使用します。 新しいオブジェクトの初期サイズをポイント単位で指定します。</param>
        <param name="Height">整数型 (<b>Integer</b>) の値を使用します。 新しいオブジェクトの初期サイズをポイント単位で指定します。</param>
        <summary>Microsoft Excel コントロールを作成します。 新しいコントロール <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> OLEObjects コレクションのメソッドまたはメソッドを使用して、コントロールを作成ActiveXします。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddLabel (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddLabel([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLabel (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddLabel(Microsoft::Office::Core::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Orientation">必須 <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> 。 ラベル内のテキストの向きを指定します。 これらの<b>MsoTextOrientation 定数のいずれかを指定できます。msoTextOrientationDownward</b>msoTextOrientationHorizonationHorizontalRotatedFarEast<b></b><b></b><b>msoTextOrientationUpward</b> <b></b> <b>msoTextOrientationUpward</b>msoTextOrientationVertical<b></b><b>msoTextOrientationVerticalFarEast</b>これらの定数の一部を使用できない場合があります。 選択またはインストールした言語サポート (米国英語など) に応じて異なる場合があります。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてラベルの左上隅の位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の上端を基準にしてラベルの左上端の位置をポイント単位で指定します。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 ラベルの幅をポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 ラベルの高さをポイント単位で指定します。</param>
        <summary>ラベルを作成します。 新しいラベル <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddLine (float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddLine([in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLine (BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddLine(float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1722)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="BeginX">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に線の終点の位置をポイント単位で指定します。</param>
        <param name="BeginY">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に線の終点の位置をポイント単位で指定します。</param>
        <param name="EndX">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に線の終点の位置をポイント単位で指定します。</param>
        <param name="EndY">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に線の終点の位置をポイント単位で指定します。</param>
        <summary>ワークシートの <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 新しい行を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddOLEObject (object ClassType, object Filename, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddOLEObject([in]object ClassType, [in]object Filename, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEObject (Optional ClassType As Object, Optional Filename As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1739)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ClassType">省略 <b>可能なオブジェクト</b>です。 (または) を指定 <paramref name="ClassType" /> する必要があります <paramref name="FileName" /> 。 オブジェクトを作成するためのプログラム ID を含む文字列を指定します。 If <paramref name="ClassType" /> を指定すると <paramref name="FileName" /> 、 <paramref name="Link" /> 無視されます。</param>
        <param name="Filename">省略 <b>可能なオブジェクト</b>です。 オブジェクトの作成元ファイルを指定します。 パスを指定しない場合は、現在の作業フォルダーが使用されます。 オブジェクトの引数または引数 <paramref name="ClassType" /> を <paramref name="FileName" /> 指定する必要がありますが、両方を指定する必要はありません。</param>
        <param name="Link">省略 <b>可能なオブジェクト</b>です。 <b>True の</b> 作成元ファイルに OLE オブジェクトをリンクします。 <b>False を指定</b> するには、OLE オブジェクトは、ファイルの独立したコピーです。 値を指定した場合、 <paramref name="ClassType" /> この引数は False である <b>必要があります</b>。 既定値は <b>False</b> です。</param>
        <param name="DisplayAsIcon">省略 <b>可能なオブジェクト</b>です。 <b>True</b> を設定すると、OLE オブジェクトをアイコンで表示します。 既定値は <b>False</b> です。</param>
        <param name="IconFileName">省略 <b>可能なオブジェクト</b>です。 表示するアイコンを含むファイルを指定します。</param>
        <param name="IconIndex">省略 <b>可能なオブジェクト</b>です。 内のアイコンのインデックス <paramref name="IconFileName" /> です。 指定したファイル内のアイコンの順序は、[アイコンの変更] ダイアログ ボックスにアイコンが表示される順序に対応します ([アイコンとして表示] チェック ボックスがオンの場合は、[オブジェクト] ダイアログ ボックスからアクセスします)。 ファイルの最初のアイコンは、インデックス番号は 0 (ゼロ) です。 指定されたインデックス番号を持つアイコンが存在しない場合は、インデックス番号 1 (ファイル内の 2 番目のアイコン) を持つアイコン <paramref name="IconFileName" /> が使用されます。 既定値は 0 (ゼロ) です。</param>
        <param name="IconLabel">省略 <b>可能なオブジェクト</b>です。 アイコンの下に表示するラベル (図表番号) を指定します。</param>
        <param name="Left">省略 <b>可能なオブジェクト</b>です。 文書の左上隅を基準に新規に作成するオブジェクトの左端と上端の位置をポイント単位で指定します。 既定値は 0 です。</param>
        <param name="Top">省略 <b>可能なオブジェクト</b>です。 文書の左上隅を基準に新規に作成するオブジェクトの左端と上端の位置をポイント単位で指定します。 既定値は 0 です。</param>
        <param name="Width">省略 <b>可能なオブジェクト</b>です。 OLE オブジェクトの初期サイズをポイント単位で指定します。</param>
        <param name="Height">省略 <b>可能なオブジェクト</b>です。 OLE オブジェクトの初期サイズをポイント単位で指定します。</param>
        <summary>OLE オブジェクトを作成します。 新しい <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> OLE オブジェクトを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPicture (string Filename, Microsoft.Office.Core.MsoTriState LinkToFile, Microsoft.Office.Core.MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPicture([in]string Filename, [in]valuetype Microsoft.Office.Core.MsoTriState LinkToFile, [in]valuetype Microsoft.Office.Core.MsoTriState SaveWithDocument, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture (Filename As String, LinkToFile As MsoTriState, SaveWithDocument As MsoTriState, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPicture(System::String ^ Filename, Microsoft::Office::Core::MsoTriState LinkToFile, Microsoft::Office::Core::MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="LinkToFile" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="SaveWithDocument" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>文字列</b> が必要です。 OLE オブジェクトを作成するファイル名を指定します。</param>
        <param name="LinkToFile">必須 <see cref="T:Microsoft.Office.Core.MsoTriState" /> 。 図をグラフィック ファイルとリンクするかどうかを指定します。 次のいずれかの <b>MsoTriState</b> 定数を指定できます<b>。msoCTrue</b><b>msoFalse</b> 画像をファイルの独立したコピーに設定します。<b>msoTriStateMixed</b><b>msoTriStateToggle</b><b>msoTrue 画像</b> を作成したファイルにリンクします。</param>
        <param name="SaveWithDocument">必須 <b>の MsoTriState</b>. 文書を保存するときに図も一緒に保存するかどうかを指定します。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にして図の左上隅の位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の上端を基準にして図の左上隅の位置をポイント単位で指定します。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 図の幅をポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 図の高さをポイント単位で指定します。</param>
        <summary>既存のファイルから図オブジェクトを作成します。 新しい図 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPicture2 (string Filename, Microsoft.Office.Core.MsoTriState LinkToFile, Microsoft.Office.Core.MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height, Microsoft.Office.Core.MsoPictureCompress Compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPicture2([in]string Filename, [in]valuetype Microsoft.Office.Core.MsoTriState LinkToFile, [in]valuetype Microsoft.Office.Core.MsoTriState SaveWithDocument, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]valuetype Microsoft.Office.Core.MsoPictureCompress Compress) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture2(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single,Microsoft.Office.Core.MsoPictureCompress)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture2 (Filename As String, LinkToFile As MsoTriState, SaveWithDocument As MsoTriState, Left As Single, Top As Single, Width As Single, Height As Single, Compress As MsoPictureCompress) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPicture2(System::String ^ Filename, Microsoft::Office::Core::MsoTriState LinkToFile, Microsoft::Office::Core::MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height, Microsoft::Office::Core::MsoPictureCompress Compress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="LinkToFile" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="SaveWithDocument" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Compress" Type="Microsoft.Office.Core.MsoPictureCompress" />
      </Parameters>
      <Docs>
        <param name="Filename">OLE オブジェクトを作成するファイル名を指定します。</param>
        <param name="LinkToFile">図を作成元のファイルにリンクするかどうかを指定します。</param>
        <param name="SaveWithDocument">リンクされた図が、挿入先のドキュメントと共に保存されるかどうかを指定します。引数 LinkToFile を msoFalse に設定する場合、この引数は msoTrue に設定する必要があります。 </param>
        <param name="Left">図の左端の位置を、ワークシートの左端からの相対的なポイント単位で指定します。</param>
        <param name="Top">図の上端の位置を、ワークシートの上端から相対的なポイント単位で指定します。</param>
        <param name="Width">図の幅をポイント単位で指定します。</param>
        <param name="Height">図の高さをポイント単位で指定します。</param>
        <param name="Compress">画像を挿入するときに圧縮するかどうかを指定します。</param>
        <summary>既存のファイルから図オブジェクトを作成します。 新しい図 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> を表すオブジェクトを返します。</summary>
        <returns>Shape</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolyline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPolyline (object SafeArrayOfPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPolyline([in]object SafeArrayOfPoints) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPolyline (SafeArrayOfPoints As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPolyline(System::Object ^ SafeArrayOfPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">必須<b>オブジェクト 。</b> 折れ線の頂点を指定する座標値の配列を指定します。</param>
        <summary>折れ線または閉じた多角形の描画を作成します。 新しいポリライン <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> またはポリゴンを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>閉じた多角形を作成するには、折れ線の始点と終点に同じ座標値を指定します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddShape (Microsoft.Office.Core.MsoAutoShapeType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddShape([in]valuetype Microsoft.Office.Core.MsoAutoShapeType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddShape (Type As MsoAutoShapeType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddShape(Microsoft::Office::Core::MsoAutoShapeType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoAutoShapeType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">必須 <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /> 。 作成するオートシェイプの種類を指定します。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に、オートシェイプの境界ボックスの左上隅となる位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準に、オートシェイプの境界ボックスの左上隅となる位置をポイント単位で指定します。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 AutoShape の境界ボックスの幅と高さをポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 AutoShape の境界ボックスの幅と高さをポイント単位で指定します。</param>
        <summary>ワークシート内の <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> 新しい AutoShape を表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>追加した AutoShape の種類を変更するには、プロパティを設定 <see cref="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType" /> します。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddSmartArt (Microsoft.Office.Core.SmartArtLayout Layout, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddSmartArt([in]class Microsoft.Office.Core.SmartArtLayout Layout, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSmartArt (Layout As SmartArtLayout, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="Microsoft.Office.Core.SmartArtLayout" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">使用するレイアウトを表すオブジェクトです。</param>
        <param name="Left">列 A の左端 (ワークシートの場合)、またはグラフ エリアの左端 (グラフの場合) からオブジェクトの左端までのポイント単位の距離です。</param>
        <param name="Top">オブジェクトの上端からワークシートの上端までのポイント単位の距離です。</param>
        <param name="Width">オブジェクトのポイント単位の高さです。</param>
        <param name="Height">オブジェクトのポイント単位の高さです。</param>
        <summary>指定されたレイアウトを使用して新しい SmartArt グラフィックを作成します。</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Excel.Shape" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextbox">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddTextbox (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddTextbox([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextbox (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddTextbox(Microsoft::Office::Core::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1734)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Orientation">必須 <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> 。 テキスト ボックス内の文字列の向きを指定します。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にしてテキスト ボックスの左上隅の位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の上端を基準にしてテキスト ボックスの左上隅の位置をポイント単位で指定します。</param>
        <param name="Width">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 テキスト ボックスの幅をポイント単位で指定します。</param>
        <param name="Height">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 テキスト ボックスの高さをポイント単位で指定します。</param>
        <summary>テキスト ボックスを作成します。 新しいテキスト <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> ボックスを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddTextEffect (Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, string Text, string FontName, float FontSize, Microsoft.Office.Core.MsoTriState FontBold, Microsoft.Office.Core.MsoTriState FontItalic, float Left, float Top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddTextEffect([in]valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, [in]string Text, [in]string FontName, [in]float32 FontSize, [in]valuetype Microsoft.Office.Core.MsoTriState FontBold, [in]valuetype Microsoft.Office.Core.MsoTriState FontItalic, [in]float32 Left, [in]float32 Top) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextEffect (PresetTextEffect As MsoPresetTextEffect, Text As String, FontName As String, FontSize As Single, FontBold As MsoTriState, FontItalic As MsoTriState, Left As Single, Top As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddTextEffect(Microsoft::Office::Core::MsoPresetTextEffect PresetTextEffect, System::String ^ Text, System::String ^ FontName, float FontSize, Microsoft::Office::Core::MsoTriState FontBold, Microsoft::Office::Core::MsoTriState FontItalic, float Left, float Top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetTextEffect" Type="Microsoft.Office.Core.MsoPresetTextEffect" />
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="FontName" Type="System.String" />
        <Parameter Name="FontSize" Type="System.Single" />
        <Parameter Name="FontBold" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="FontItalic" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="PresetTextEffect">必須 <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" /> 。 既定のテキスト効果を指定します。</param>
        <param name="Text"><b>文字列</b> が必要です。 ワードアートの文字列を指定します。</param>
        <param name="FontName"><b>文字列</b> が必要です。 ワードアートで使用するフォントの名前を指定します。</param>
        <param name="FontSize">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 ワードアートで使用するフォントの大きさをポイント単位で指定します。</param>
        <param name="FontBold">必須 <see cref="T:Microsoft.Office.Core.MsoTriState" /> 。 ワードアートで使用するフォント スタイルを太字にするかどうかを設定します。</param>
        <param name="FontItalic">必須 <b>の MsoTriState</b>. ワードアートで使用するフォント スタイルを斜体にするかどうかを設定します。</param>
        <param name="Left">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にして、ワードアートの境界ボックスの左上隅の位置をポイント単位で指定します。</param>
        <param name="Top">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の上端を基準にして、ワードアートの境界ボックスの左上隅の位置をポイント単位で指定します。</param>
        <summary>ワードアート オブジェクトを作成します。 新しい <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> WordArt オブジェクトを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>ワードアートを文書に追加すると、ユーザーが指定した文字列の文字数と大きさに合わせて、ワードアートの幅と高さが自動的に設定されます。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのオブジェクト <see cref="T:Microsoft.Office.Interop.Excel.Application" /> を表すオブジェクトMicrosoft Excelします。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFreeform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FreeformBuilder BuildFreeform (Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.FreeformBuilder BuildFreeform([in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildFreeform (EditingType As MsoEditingType, X1 As Single, Y1 As Single) As FreeformBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::FreeformBuilder ^ BuildFreeform(Microsoft::Office::Core::MsoEditingType EditingType, float X1, float Y1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1735)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FreeformBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="EditingType">必須 <see cref="T:Microsoft.Office.Core.MsoEditingType" /> 。 最初の節点の編集プロパティを指定します。</param>
        <param name="X1">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にフリーフォームの最初の節点の位置をポイント単位で指定します。</param>
        <param name="Y1">単精度浮動小数点型 (<b>Single</b>) の値を使用します。 文書の左上隅を基準にフリーフォームの最初の節点の位置をポイント単位で指定します。</param>
        <summary>フリーフォーム オブジェクトを作成します。 作成中 <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> のフリーフォームを表すオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks><para>このメソッド <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> を使用して、フリーフォームにセグメントを追加します。 少なくとも 1 つのセグメントをフリーフォームに追加した後、FreeformBuilder オブジェクトを <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> <b>FreeformBuilder</b>オブジェクトで定義した幾何学的な説明を持つオブジェクトに変換できます。 <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> <b></b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内にあるオブジェクトの数を返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクトを作成したアプリケーションを示す、32 ビットの整数値を返します。</summary>
        <value>To be added.</value>
        <remarks><para>Excel で作成されたオブジェクトの場合は、文字列 XCEL を表す 16 進数の 5843454C を返します。</para>
          <para><b>Creator</b> プロパティは、各アプリケーションに 4 文字の作成元のコードが付加される Macintosh 版 Microsoft Excel で使用するように設計されました。 たとえば、Microsoft Excel の作成元コードは XCEL です。</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">必須<b>オブジェクト 。</b> オブジェクトの名前またはインデックス番号を指定します。</param>
        <summary>コレクションから単一のオブジェクトを返します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたオブジェクトの親オブジェクトを返します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Range[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange Range(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Range(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Index As Object) As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ Range[System::Object ^] { Microsoft::Office::Interop::Excel::ShapeRange ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">必須<b>オブジェクト 。</b> 図形範囲に含む、各図形を指定します。 図形のインデックス番号を指定する整数、図形の名前を指定する文字列、あるいは整数または文字列を含む配列を使用できます。</param>
        <summary>コレクション内の <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> 図形のサブセットを表すオブジェクトを返 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1737)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したコレクション内のすべての図形を選択 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>